// Generated by https://quicktype.io
//
// To change quicktype's target language, run command:
//
//   "Set quicktype target language"

export interface Swagger {
    components: Components;
    info:       Info;
    openapi:    string;
    paths:      any;
    servers:    Server[];
}

export interface Components {
    examples:        Examples;
    headers:         Examples;
    parameters:      Examples;
    requestBodies:   Examples;
    responses:       Examples;
    schemas:         Schemas;
    securitySchemes: Examples;
}

export interface Examples {
}

export interface Schemas {
    Product:                                            Product;
    Error:                                              Error;
    "ResponseApi_Product-Array_":                       ArakGroundhog;
    ResponseApi_Product_:                               BeijingPigeon;
    ProductDto:                                         ProductDto;
    ProductUpdate:                                      Product;
    Customer:                                           Customer;
    "ResponseApi_Customer-Array_":                      ArakGroundhog;
    ResponseApi_Customer_:                              BeijingPigeon;
    CustomerDto:                                        CustomerDto;
    CustomerUpdate:                                     Customer;
    UserModel:                                          UserModel;
    ErrorException:                                     ErrorException;
    UserById:                                           UserByID;
    WebformModelNew:                                    WebformModelNew;
    "ResponseApi_WebformModelNew-Array_":               ArakGroundhog;
    ResponseApi_WebformModelNew_:                       BeijingPigeon;
    OrderModel:                                         OrderModel;
    Country:                                            PurpleCity;
    "ResponseApi_Country-Array_":                       ArakGroundhog;
    ResponseApi_Country_:                               BeijingPigeon;
    CountryDto:                                         YDto;
    CountryUpdate:                                      PurpleCity;
    State:                                              PurpleCity;
    "ResponseApi_State-Array_":                         ArakGroundhog;
    ResponseApi_State_:                                 BeijingPigeon;
    StateDto:                                           StateDto;
    StateUpdate:                                        PurpleCity;
    County:                                             PurpleCity;
    "ResponseApi_County-Array_":                        ArakGroundhog;
    ResponseApi_County_:                                BeijingPigeon;
    CountyDto:                                          YDto;
    CountyUpdate:                                       PurpleCity;
    City:                                               PurpleCity;
    "ResponseApi_City-Array_":                          ArakGroundhog;
    ResponseApi_City_:                                  BeijingPigeon;
    CityDto:                                            YDto;
    CityUpdate:                                         PurpleCity;
    Schedule:                                           PuneHedgehog;
    "ResponseApi_Schedule-Array_":                      ArakGroundhog;
    ResponseApi_Schedule_:                              BeijingPigeon;
    ScheduleDto:                                        BankAccountDtoClass;
    ScheduleUpdate:                                     PuneHedgehog;
    Dispatch:                                           PuneHedgehog;
    "ResponseApi_Dispatch-Array_":                      ArakGroundhog;
    ResponseApi_Dispatch_:                              BeijingPigeon;
    DispatchDto:                                        BankAccountDtoClass;
    DispatchUpdate:                                     PuneHedgehog;
    ShippingMethod:                                     ShippingMethod;
    "ResponseApi_ShippingMethod-Array_":                ArakGroundhog;
    ResponseApi_ShippingMethod_:                        BeijingPigeon;
    ShippingMethodDto:                                  ShippingMethodDto;
    ShippingMethodUpdate:                               ShippingMethod;
    Currency:                                           PuneHedgehog;
    "ResponseApi_Currency-Array_":                      ArakGroundhog;
    ResponseApi_Currency_:                              BeijingPigeon;
    CurrencyDto:                                        BankAccountDtoClass;
    CurrencyUpdate:                                     PuneHedgehog;
    Bank:                                               PuneHedgehog;
    "ResponseApi_Bank-Array_":                          ArakGroundhog;
    ResponseApi_Bank_:                                  BeijingPigeon;
    BankDto:                                            BankAccountDtoClass;
    BankUpdate:                                         PuneHedgehog;
    BankAccount:                                        PuneHedgehog;
    "ResponseApi_BankAccount-Array-or-ErrorException_": ResponseAPIBankAccountArrayOrErrorException;
    "ResponseApi_BankAccount-or-ErrorException_":       ResponseAPIBankAccountOrErrorException;
    BankAccountDto:                                     BankAccountDtoClass;
    BankAccountUpdate:                                  PuneHedgehog;
    Type:                                               PuneHedgehog;
    "ResponseApi_Type-Array_":                          ArakGroundhog;
    ResponseApi_Type_:                                  BeijingPigeon;
    TypeDto:                                            StatusDtoClass;
    TypeUpdate:                                         PuneHedgehog;
    Store:                                              Store;
    "ResponseApi_Store-Array_":                         ArakGroundhog;
    ResponseApi_Store_:                                 BeijingPigeon;
    StoreDto:                                           StoreDtoClass;
    StoreUpdate:                                        Store;
    PartnerProductCategory:                             PuneHedgehog;
    MarketplaceModel:                                   EModel;
    PartnerModel:                                       PartnerModel;
    PartnerLogisticZone:                                PuneHedgehog;
    PartnerLogistic:                                    PuneHedgehog;
    PartnerBank:                                        PartnerBank;
    PartnerUser:                                        PuneHedgehog;
    ContactDetailModel:                                 ContactDetailModel;
    Contact:                                            PuneHedgehog;
    FullInformationCity:                                FullInformationCity;
    StoreModelPDF:                                      StoreDtoClass;
    ShippingZoneModel:                                  EModel;
    LogisticZonePDF:                                    LogisticZonePDF;
    FullPartnerModel:                                   FullPartnerModel;
    ResponseApi_PartnerModel_:                          BeijingPigeon;
    "ResponseApi_PartnerUser-Array_":                   ArakGroundhog;
    ResponseApi_PartnerUser_:                           BeijingPigeon;
    PartnerUserDto:                                     PartnerUserDto;
    PartnerUserUpdate:                                  PuneHedgehog;
    "ResponseApi_Contact-Array_":                       ArakGroundhog;
    ResponseApi_Contact_:                               BeijingPigeon;
    ContactDto:                                         ContactDto;
    ContactUpdate:                                      PuneHedgehog;
    Training:                                           PuneHedgehog;
    "ResponseApi_Training-Array_":                      ArakGroundhog;
    ResponseApi_Training_:                              BeijingPigeon;
    TrainingDto:                                        BankAccountDtoClass;
    TrainingUpdate:                                     PuneHedgehog;
    Reason:                                             PuneHedgehog;
    "ResponseApi_Reason-Array_":                        ArakGroundhog;
    ResponseApi_Reason_:                                BeijingPigeon;
    ReasonDto:                                          BankAccountDtoClass;
    ReasonUpdate:                                       PuneHedgehog;
    Info:                                               PuneHedgehog;
    "ResponseApi_Info-Array_":                          ArakGroundhog;
    ResponseApi_Info_:                                  BeijingPigeon;
    InfoDto:                                            BankAccountDtoClass;
    InfoUpdate:                                         PuneHedgehog;
    Loyalty:                                            PuneHedgehog;
    "ResponseApi_Loyalty-Array_":                       ArakGroundhog;
    ResponseApi_Loyalty_:                               BeijingPigeon;
    LoyaltyDto:                                         LoyaltyDto;
    LoyaltyUpdate:                                      PuneHedgehog;
    LoyaltyHistory:                                     LoyaltyHistory;
    "ResponseApi_LoyaltyHistory-Array_":                ArakGroundhog;
    ResponseApi_LoyaltyHistory_:                        BeijingPigeon;
    LoyaltyHistoryDto:                                  LoyaltyHistoryDto;
    LoyaltyHistoryUpdate:                               LoyaltyHistory;
    Tier:                                               PuneHedgehog;
    "ResponseApi_Tier-Array_":                          ArakGroundhog;
    ResponseApi_Tier_:                                  BeijingPigeon;
    TierDto:                                            BankAccountDtoClass;
    TierUpdate:                                         PuneHedgehog;
    BusinessUnit:                                       PuneHedgehog;
    "ResponseApi_BusinessUnit-Array_":                  ArakGroundhog;
    ResponseApi_BusinessUnit_:                          BeijingPigeon;
    BusinessUnitDto:                                    BankAccountDtoClass;
    BusinessUnitUpdate:                                 PuneHedgehog;
    ProductCategory:                                    PuneHedgehog;
    "ResponseApi_ProductCategory-Array_":               ArakGroundhog;
    ResponseApi_ProductCategory_:                       BeijingPigeon;
    ProductCategoryDto:                                 BankAccountDtoClass;
    ProductCategoryUpdate:                              PuneHedgehog;
    Marketplace:                                        PuneHedgehog;
    "ResponseApi_Marketplace-Array_":                   ArakGroundhog;
    ResponseApi_Marketplace_:                           BeijingPigeon;
    MarketplaceDto:                                     BankAccountDtoClass;
    MarketplaceUpdate:                                  PuneHedgehog;
    EntityType:                                         PuneHedgehog;
    "ResponseApi_EntityType-Array_":                    ArakGroundhog;
    ResponseApi_EntityType_:                            BeijingPigeon;
    EntityTypeDto:                                      BankAccountDtoClass;
    EntityTypeUpdate:                                   PuneHedgehog;
    "ResponseApi_PartnerLogistic-Array_":               ArakGroundhog;
    ResponseApi_PartnerLogistic_:                       BeijingPigeon;
    PartnerLogisticDto:                                 PartnerLogisticDto;
    PartnerLogisticUpdate:                              PuneHedgehog;
    "ResponseApi_PartnerLogisticZone-Array_":           ArakGroundhog;
    ResponseApi_PartnerLogisticZone_:                   BeijingPigeon;
    PartnerLogisticZoneDto:                             LogisticZonePDF;
    PartnerLogisticZoneUpdate:                          PuneHedgehog;
    "ResponseApi_PartnerProductCategory-Array_":        ArakGroundhog;
    ResponseApi_PartnerProductCategory_:                BeijingPigeon;
    PartnerProductCategoryDto:                          PartnerProductCategoryDto;
    PartnerProductCategoryUpdate:                       PuneHedgehog;
    BusinessDivision:                                   PuneHedgehog;
    "ResponseApi_BusinessDivision-Array_":              ArakGroundhog;
    ResponseApi_BusinessDivision_:                      BeijingPigeon;
    BusinessDivisionDto:                                BankAccountDtoClass;
    BusinessDivisionUpdate:                             PuneHedgehog;
    "ResponseApi_PartnerBank-Array_":                   ArakGroundhog;
    ResponseApi_PartnerBank_:                           BeijingPigeon;
    PartnerBankDto:                                     PartnerBankDto;
    PartnerBankUpdate:                                  PartnerBank;
    LoyaltyCategory:                                    PuneHedgehog;
    "ResponseApi_LoyaltyCategory-Array_":               ArakGroundhog;
    ResponseApi_LoyaltyCategory_:                       BeijingPigeon;
    LoyaltyCategoryDto:                                 BankAccountDtoClass;
    LoyaltyCategoryUpdate:                              PuneHedgehog;
    PartnerHistory:                                     PartnerHistory;
    "ResponseApi_PartnerHistory-Array_":                ArakGroundhog;
    ResponseApi_PartnerHistory_:                        BeijingPigeon;
    PartnerHistoryDto:                                  PartnerHistoryDto;
    PartnerHistoryUpdate:                               PartnerHistory;
    ShippingZone:                                       PuneHedgehog;
    "ResponseApi_ShippingZone-Array_":                  ArakGroundhog;
    ResponseApi_ShippingZone_:                          BeijingPigeon;
    ShippingZoneDto:                                    BankAccountDtoClass;
    ShippingZoneUpdate:                                 PuneHedgehog;
    UserTraining:                                       PuneHedgehog;
    "ResponseApi_UserTraining-Array_":                  ArakGroundhog;
    ResponseApi_UserTraining_:                          BeijingPigeon;
    UserTrainingDto:                                    UserTrainingDto;
    UserTrainingUpdate:                                 PuneHedgehog;
    OrderStatusHistory:                                 OrderStatusHistory;
    "ResponseApi_OrderStatusHistory-Array_":            ArakGroundhog;
    ResponseApi_OrderStatusHistory_:                    BeijingPigeon;
    OrderStatusHistoryDto:                              OrderStatusHistoryDto;
    OrderStatusHistoryUpdate:                           OrderStatusHistory;
    Status:                                             PuneHedgehog;
    "ResponseApi_Status-Array_":                        ArakGroundhog;
    ResponseApi_Status_:                                BeijingPigeon;
    StatusDto:                                          StatusDtoClass;
    StatusUpdate:                                       PuneHedgehog;
    SignificantDate:                                    PuneHedgehog;
    "ResponseApi_SignificantDate-Array_":               ArakGroundhog;
    ResponseApi_SignificantDate_:                       BeijingPigeon;
    SignificantDateDto:                                 BankAccountDtoClass;
    SignificantDateUpdate:                              PuneHedgehog;
}

export interface PuneHedgehog {
    properties:           PurpleProperties;
    required?:            string[];
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface PurpleProperties {
    id:                    LivingstoneSouthernWhiteFacedOwl;
    status:                LivingstoneSouthernWhiteFacedOwl;
    created_by:            LivingstoneSouthernWhiteFacedOwl;
    updated_by:            LivingstoneSouthernWhiteFacedOwl;
    deleted_by:            LivingstoneSouthernWhiteFacedOwl;
    created_at:            LivingstoneSouthernWhiteFacedOwl;
    updated_at:            LivingstoneSouthernWhiteFacedOwl;
    deleted_at:            LivingstoneSouthernWhiteFacedOwl;
    deleted_usr:           LivingstoneSouthernWhiteFacedOwl;
    name?:                 TartuGecko;
    description?:          TartuGecko;
    business_unit_id?:     LivingstoneSouthernWhiteFacedOwl;
    partner_id?:           LivingstoneSouthernWhiteFacedOwl;
    detail?:               HammerfestPonies;
    type_id?:              LivingstoneSouthernWhiteFacedOwl;
    info_id?:              LivingstoneSouthernWhiteFacedOwl;
    mrkl_shop_id?:         LivingstoneSouthernWhiteFacedOwl;
    shop_name?:            TartuGecko;
    username?:             TartuGecko;
    shipping_method_id?:   LivingstoneSouthernWhiteFacedOwl;
    logistic_zones?:       LogisticZones;
    order?:                LivingstoneSouthernWhiteFacedOwl;
    partner_logistic_id?:  LivingstoneSouthernWhiteFacedOwl;
    shipping_zone_id?:     LivingstoneSouthernWhiteFacedOwl;
    freight_cost?:         LivingstoneSouthernWhiteFacedOwl;
    product_category_id?:  LivingstoneSouthernWhiteFacedOwl;
    user_id?:              LivingstoneSouthernWhiteFacedOwl;
    partner_child_id?:     LivingstoneSouthernWhiteFacedOwl;
    business_division_id?: LivingstoneSouthernWhiteFacedOwl;
    auto_reprogramming?:   TartuGecko;
    date?:                 LivingstoneSouthernWhiteFacedOwl;
    table?:                TartuGecko;
    comment?:              TartuGecko;
    main?:                 TartuGecko;
    training_id?:          LivingstoneSouthernWhiteFacedOwl;
    training_date?:        LivingstoneSouthernWhiteFacedOwl;
}

export interface TartuGecko {
    type: PurpleType;
}

export enum PurpleType {
    Boolean = "boolean",
    Number = "number",
    String = "string",
}

export interface LivingstoneSouthernWhiteFacedOwl {
    type:    PurpleType;
    format?: Format;
}

export enum Format {
    DateTime = "date-time",
    Double = "double",
}

export interface HammerfestPonies {
    $ref: string;
}

export interface LogisticZones {
    items: HammerfestPonies;
    type:  FluffyType;
}

export enum FluffyType {
    Array = "array",
}

export enum TentacledType {
    Object = "object",
}

export interface BankAccountDtoClass {
    properties:           FluffyProperties;
    required:             string[];
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface FluffyProperties {
    name?:                 TartuGecko;
    description:           TartuGecko;
    created_by:            LivingstoneSouthernWhiteFacedOwl;
    business_unit_id?:     LivingstoneSouthernWhiteFacedOwl;
    type_id?:              LivingstoneSouthernWhiteFacedOwl;
    info_id?:              LivingstoneSouthernWhiteFacedOwl;
    business_division_id?: LivingstoneSouthernWhiteFacedOwl;
    auto_reprogramming?:   TartuGecko;
    date?:                 LivingstoneSouthernWhiteFacedOwl;
}

export interface PurpleCity {
    properties:           CityProperties;
    required?:            string[];
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface CityProperties {
    id:          TartuGecko;
    status:      LivingstoneSouthernWhiteFacedOwl;
    created_by:  LivingstoneSouthernWhiteFacedOwl;
    updated_by:  LivingstoneSouthernWhiteFacedOwl;
    deleted_by:  LivingstoneSouthernWhiteFacedOwl;
    created_at:  LivingstoneSouthernWhiteFacedOwl;
    updated_at:  LivingstoneSouthernWhiteFacedOwl;
    deleted_at:  LivingstoneSouthernWhiteFacedOwl;
    deleted_usr: LivingstoneSouthernWhiteFacedOwl;
    county_id?:  TartuGecko;
    name:        TartuGecko;
    iso?:        TartuGecko;
    state_id?:   TartuGecko;
    country_id?: TartuGecko;
}

export interface YDto {
    properties:           CityDtoProperties;
    required:             string[];
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface CityDtoProperties {
    county_id?: TartuGecko;
    name:       TartuGecko;
    created_by: LivingstoneSouthernWhiteFacedOwl;
    id:         TartuGecko;
    iso?:       TartuGecko;
    state_id?:  TartuGecko;
}

export interface ContactDetailModel {
    properties:           ContactDetailModelProperties;
    required:             string[];
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface ContactDetailModelProperties {
    area:     TartuGecko;
    email:    TartuGecko;
    phone:    TartuGecko;
    fullname: TartuGecko;
}

export interface ContactDto {
    properties:           ContactDtoProperties;
    required:             string[];
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface ContactDtoProperties {
    partner_id: LivingstoneSouthernWhiteFacedOwl;
    detail:     HammerfestPonies;
    created_by: LivingstoneSouthernWhiteFacedOwl;
}

export interface Customer {
    properties:           CustomerProperties;
    required?:            string[];
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface CustomerProperties {
    id:               LivingstoneSouthernWhiteFacedOwl;
    status:           LivingstoneSouthernWhiteFacedOwl;
    created_by:       LivingstoneSouthernWhiteFacedOwl;
    updated_by:       LivingstoneSouthernWhiteFacedOwl;
    deleted_by:       LivingstoneSouthernWhiteFacedOwl;
    created_at:       LivingstoneSouthernWhiteFacedOwl;
    updated_at:       LivingstoneSouthernWhiteFacedOwl;
    deleted_at:       LivingstoneSouthernWhiteFacedOwl;
    deleted_usr:      LivingstoneSouthernWhiteFacedOwl;
    dni:              TartuGecko;
    email:            TartuGecko;
    first_names:      TartuGecko;
    last_names:       TartuGecko;
    country:          TartuGecko;
    county:           TartuGecko;
    city:             TartuGecko;
    street:           TartuGecko;
    phone:            TartuGecko;
    phone_secondary:  TartuGecko;
    additional_info:  TartuGecko;
    mrkl_customer_id: TartuGecko;
    state:            TartuGecko;
}

export interface CustomerDto {
    properties:           CustomerDtoProperties;
    required:             string[];
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface CustomerDtoProperties {
    dni:              TartuGecko;
    email:            TartuGecko;
    first_names:      TartuGecko;
    last_names:       TartuGecko;
    country:          TartuGecko;
    county:           TartuGecko;
    city:             TartuGecko;
    street:           TartuGecko;
    phone:            TartuGecko;
    phone_secondary:  TartuGecko;
    additional_info:  TartuGecko;
    mrkl_customer_id: TartuGecko;
    state:            TartuGecko;
    created_by:       LivingstoneSouthernWhiteFacedOwl;
}

export interface Error {
    properties:           ErrorProperties;
    required:             string[];
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface ErrorProperties {
    code:    TartuGecko;
    name:    TartuGecko;
    context: TartuGecko;
    message: TartuGecko;
}

export interface ErrorException {
    properties:           ErrorExceptionProperties;
    required:             string[];
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface ErrorExceptionProperties {
    error: HammerfestPonies;
}

export interface FullInformationCity {
    properties:           FullInformationCityProperties;
    required:             string[];
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface FullInformationCityProperties {
    city:    HammerfestPonies;
    county:  HammerfestPonies;
    state:   HammerfestPonies;
    country: HammerfestPonies;
}

export interface FullPartnerModel {
    properties:           FullPartnerModelProperties;
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface FullPartnerModelProperties {
    id:                  LivingstoneSouthernWhiteFacedOwl;
    mrkl_shop_id:        MrklShopID;
    tier_id:             MrklShopID;
    parent_partner:      MrklShopID;
    ruc:                 TartuGecko;
    business_name:       TartuGecko;
    trade_name:          TartuGecko;
    shop_name:           TartuGecko;
    phone:               TartuGecko;
    email:               TartuGecko;
    city_id:             TartuGecko;
    fiscal_address:      TartuGecko;
    address_ref:         TartuGecko;
    commission:          LivingstoneSouthernWhiteFacedOwl;
    type:                TartuGecko;
    web_site:            TartuGecko;
    logo:                TartuGecko;
    description:         TartuGecko;
    enterprise_iva:      TartuGecko;
    product_category_id: LivingstoneSouthernWhiteFacedOwl;
    categories:          LogisticZones;
    shop_type_id:        LivingstoneSouthernWhiteFacedOwl;
    shipping_24h:        TartuGecko;
    issues_invoice:      TartuGecko;
    brands:              TartuGecko;
    register_mode:       TartuGecko;
    account_manager:     TartuGecko;
    approbation_date:    LivingstoneSouthernWhiteFacedOwl;
    product_average:     LivingstoneSouthernWhiteFacedOwl;
    other_marketplaces:  LogisticZones;
    mrkl_shop_status:    TartuGecko;
    mrkl_shop_error:     TartuGecko;
    status:              LivingstoneSouthernWhiteFacedOwl;
    status_addons:       LivingstoneSouthernWhiteFacedOwl;
    created_by:          LivingstoneSouthernWhiteFacedOwl;
    updated_by:          LivingstoneSouthernWhiteFacedOwl;
    deleted_by:          LivingstoneSouthernWhiteFacedOwl;
    created_at:          LivingstoneSouthernWhiteFacedOwl;
    updated_at:          LivingstoneSouthernWhiteFacedOwl;
    deleted_at:          LivingstoneSouthernWhiteFacedOwl;
    datePdf:             TartuGecko;
    fullDataCity:        HammerfestPonies;
    bank:                HammerfestPonies;
    bankAccount:         HammerfestPonies;
    currency:            HammerfestPonies;
    providerPaymentData: HammerfestPonies;
    accountingContact:   HammerfestPonies;
    store:               HammerfestPonies;
    shippingMethod:      HammerfestPonies;
    dispatch:            HammerfestPonies;
    logisticZones:       LogisticZones;
    brandsFull:          BrandsFull;
    isDirectDispatch:    TartuGecko;
    contactManagement:   LogisticZones;
    contactLogistic:     LogisticZones;
    contactPostsale:     LogisticZones;
    contactsAdditional:  LogisticZones;
    partners:            LogisticZones;
    logistics:           LogisticZones;
    banks:               LogisticZones;
    users:               LogisticZones;
    stores:              LogisticZones;
    contacts:            LogisticZones;
}

export interface BrandsFull {
    items: TartuGecko;
    type:  FluffyType;
}

export interface MrklShopID {
    type:     PurpleType;
    format:   Format;
    nullable: boolean;
}

export interface LogisticZonePDF {
    properties:           LogisticZonePDFProperties;
    required:             string[];
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface LogisticZonePDFProperties {
    partner_logistic_id: LivingstoneSouthernWhiteFacedOwl;
    shipping_zone_id:    LivingstoneSouthernWhiteFacedOwl;
    freight_cost:        LivingstoneSouthernWhiteFacedOwl;
    order:               LivingstoneSouthernWhiteFacedOwl;
    shippingZone?:       HammerfestPonies;
    created_by?:         LivingstoneSouthernWhiteFacedOwl;
}

export interface LoyaltyDto {
    properties:           LoyaltyDtoProperties;
    required:             string[];
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface LoyaltyDtoProperties {
    mrkl_shop_id: LivingstoneSouthernWhiteFacedOwl;
    shop_name:    TartuGecko;
    username:     TartuGecko;
    created_by:   LivingstoneSouthernWhiteFacedOwl;
}

export interface LoyaltyHistory {
    properties:           { [key: string]: LivingstoneSouthernWhiteFacedOwl };
    required?:            string[];
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface LoyaltyHistoryDto {
    properties:           { [key: string]: LivingstoneSouthernWhiteFacedOwl };
    required:             string[];
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface EModel {
    properties:           MarketplaceModelProperties;
    required:             string[];
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface MarketplaceModelProperties {
    name:        TartuGecko;
    description: TartuGecko;
}

export interface OrderModel {
    properties:           OrderModelProperties;
    required:             string[];
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface OrderModelProperties {
    id:                    LivingstoneSouthernWhiteFacedOwl;
    mrkl_order_id:         TartuGecko;
    mrkl_order_state:      TartuGecko;
    commercial_id:         TartuGecko;
    created_date:          LivingstoneSouthernWhiteFacedOwl;
    customer_debited_date: LivingstoneSouthernWhiteFacedOwl;
    shipping_deadline:     LivingstoneSouthernWhiteFacedOwl;
    shipping_zone_label:   TartuGecko;
    order_id:              TartuGecko;
    order_status_id:       LivingstoneSouthernWhiteFacedOwl;
    total_price:           LivingstoneSouthernWhiteFacedOwl;
    dispatch_date:         LivingstoneSouthernWhiteFacedOwl;
    new_dispatch_date:     LivingstoneSouthernWhiteFacedOwl;
    delivery_date:         LivingstoneSouthernWhiteFacedOwl;
    number_of_boxes:       LivingstoneSouthernWhiteFacedOwl;
    route_google_maps:     RouteGoogleMaps;
    seller_id:             LivingstoneSouthernWhiteFacedOwl;
    customer_id:           LivingstoneSouthernWhiteFacedOwl;
    carrier_id:            LivingstoneSouthernWhiteFacedOwl;
    vehicle_id:            LivingstoneSouthernWhiteFacedOwl;
    created_at:            LivingstoneSouthernWhiteFacedOwl;
    updated_at:            LivingstoneSouthernWhiteFacedOwl;
}

export interface RouteGoogleMaps {
    properties:           Examples;
    additionalProperties: Examples;
    type:                 TentacledType;
}

export interface OrderStatusHistory {
    properties:           OrderStatusHistoryProperties;
    required?:            string[];
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface OrderStatusHistoryProperties {
    id:                  LivingstoneSouthernWhiteFacedOwl;
    status:              LivingstoneSouthernWhiteFacedOwl;
    created_by:          LivingstoneSouthernWhiteFacedOwl;
    updated_by:          LivingstoneSouthernWhiteFacedOwl;
    deleted_by:          LivingstoneSouthernWhiteFacedOwl;
    created_at:          LivingstoneSouthernWhiteFacedOwl;
    updated_at:          LivingstoneSouthernWhiteFacedOwl;
    deleted_at:          LivingstoneSouthernWhiteFacedOwl;
    deleted_usr:         LivingstoneSouthernWhiteFacedOwl;
    order_id:            LivingstoneSouthernWhiteFacedOwl;
    user_id:             LivingstoneSouthernWhiteFacedOwl;
    message:             LivingstoneSouthernWhiteFacedOwl;
    data:                TartuGecko;
    evidence_image_urls: BrandsFull;
    client_sign:         TartuGecko;
    order_status_id:     LivingstoneSouthernWhiteFacedOwl;
}

export interface OrderStatusHistoryDto {
    properties:           OrderStatusHistoryDtoProperties;
    required:             string[];
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface OrderStatusHistoryDtoProperties {
    order_id:            LivingstoneSouthernWhiteFacedOwl;
    user_id:             LivingstoneSouthernWhiteFacedOwl;
    message:             LivingstoneSouthernWhiteFacedOwl;
    data:                TartuGecko;
    evidence_image_urls: BrandsFull;
    client_sign:         TartuGecko;
    order_status_id:     LivingstoneSouthernWhiteFacedOwl;
    created_by:          LivingstoneSouthernWhiteFacedOwl;
}

export interface PartnerBank {
    properties:           PartnerBankProperties;
    required?:            string[];
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface PartnerBankProperties {
    id:              LivingstoneSouthernWhiteFacedOwl;
    status:          LivingstoneSouthernWhiteFacedOwl;
    created_by:      LivingstoneSouthernWhiteFacedOwl;
    updated_by:      LivingstoneSouthernWhiteFacedOwl;
    deleted_by:      LivingstoneSouthernWhiteFacedOwl;
    created_at:      LivingstoneSouthernWhiteFacedOwl;
    updated_at:      LivingstoneSouthernWhiteFacedOwl;
    deleted_at:      LivingstoneSouthernWhiteFacedOwl;
    deleted_usr:     LivingstoneSouthernWhiteFacedOwl;
    partner_id:      LivingstoneSouthernWhiteFacedOwl;
    bank_id:         LivingstoneSouthernWhiteFacedOwl;
    bank_account_id: LivingstoneSouthernWhiteFacedOwl;
    currency_id:     LivingstoneSouthernWhiteFacedOwl;
    ccc:             TartuGecko;
    cci:             TartuGecko;
    billing_email:   TartuGecko;
}

export interface PartnerBankDto {
    properties:           PartnerBankDtoProperties;
    required:             string[];
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface PartnerBankDtoProperties {
    partner_id:      LivingstoneSouthernWhiteFacedOwl;
    bank_id:         LivingstoneSouthernWhiteFacedOwl;
    bank_account_id: LivingstoneSouthernWhiteFacedOwl;
    currency_id:     LivingstoneSouthernWhiteFacedOwl;
    ccc:             TartuGecko;
    cci:             TartuGecko;
    billing_email:   TartuGecko;
    created_by:      LivingstoneSouthernWhiteFacedOwl;
}

export interface PartnerHistory {
    properties:           PartnerHistoryProperties;
    required?:            string[];
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface PartnerHistoryProperties {
    id:            LivingstoneSouthernWhiteFacedOwl;
    status:        LivingstoneSouthernWhiteFacedOwl;
    created_by:    LivingstoneSouthernWhiteFacedOwl;
    updated_by:    LivingstoneSouthernWhiteFacedOwl;
    deleted_by:    LivingstoneSouthernWhiteFacedOwl;
    created_at:    LivingstoneSouthernWhiteFacedOwl;
    updated_at:    LivingstoneSouthernWhiteFacedOwl;
    deleted_at:    LivingstoneSouthernWhiteFacedOwl;
    deleted_usr:   LivingstoneSouthernWhiteFacedOwl;
    partner_id:    LivingstoneSouthernWhiteFacedOwl;
    status_addons: LivingstoneSouthernWhiteFacedOwl;
    mailing_date:  LivingstoneSouthernWhiteFacedOwl;
    mailing_error: Examples;
    comment:       TartuGecko;
}

export interface PartnerHistoryDto {
    properties:           PartnerHistoryDtoProperties;
    required:             string[];
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface PartnerHistoryDtoProperties {
    status:        LivingstoneSouthernWhiteFacedOwl;
    partner_id:    LivingstoneSouthernWhiteFacedOwl;
    status_addons: LivingstoneSouthernWhiteFacedOwl;
    mailing_date:  LivingstoneSouthernWhiteFacedOwl;
    mailing_error: Examples;
    comment:       TartuGecko;
    created_by:    LivingstoneSouthernWhiteFacedOwl;
}

export interface PartnerLogisticDto {
    properties:           PartnerLogisticDtoProperties;
    required:             string[];
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface PartnerLogisticDtoProperties {
    partner_id:         LivingstoneSouthernWhiteFacedOwl;
    shipping_method_id: LivingstoneSouthernWhiteFacedOwl;
    logistic_zones:     LogisticZones;
    order:              LivingstoneSouthernWhiteFacedOwl;
    created_by:         LivingstoneSouthernWhiteFacedOwl;
}

export interface PartnerModel {
    properties:           PartnerModelProperties;
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface PartnerModelProperties {
    id:                  LivingstoneSouthernWhiteFacedOwl;
    mrkl_shop_id:        MrklShopID;
    tier_id:             MrklShopID;
    parent_partner:      MrklShopID;
    ruc:                 TartuGecko;
    business_name:       TartuGecko;
    trade_name:          TartuGecko;
    shop_name:           TartuGecko;
    phone:               TartuGecko;
    email:               TartuGecko;
    city_id:             TartuGecko;
    fiscal_address:      TartuGecko;
    address_ref:         TartuGecko;
    commission:          LivingstoneSouthernWhiteFacedOwl;
    type:                TartuGecko;
    web_site:            TartuGecko;
    logo:                TartuGecko;
    description:         TartuGecko;
    enterprise_iva:      TartuGecko;
    product_category_id: LivingstoneSouthernWhiteFacedOwl;
    categories:          LogisticZones;
    shop_type_id:        LivingstoneSouthernWhiteFacedOwl;
    shipping_24h:        TartuGecko;
    issues_invoice:      TartuGecko;
    brands:              TartuGecko;
    register_mode:       TartuGecko;
    account_manager:     TartuGecko;
    approbation_date:    LivingstoneSouthernWhiteFacedOwl;
    product_average:     LivingstoneSouthernWhiteFacedOwl;
    other_marketplaces:  LogisticZones;
    mrkl_shop_status:    TartuGecko;
    mrkl_shop_error:     TartuGecko;
    status:              LivingstoneSouthernWhiteFacedOwl;
    status_addons:       LivingstoneSouthernWhiteFacedOwl;
    created_by:          LivingstoneSouthernWhiteFacedOwl;
    updated_by:          LivingstoneSouthernWhiteFacedOwl;
    deleted_by:          LivingstoneSouthernWhiteFacedOwl;
    created_at:          LivingstoneSouthernWhiteFacedOwl;
    updated_at:          LivingstoneSouthernWhiteFacedOwl;
    deleted_at:          LivingstoneSouthernWhiteFacedOwl;
}

export interface PartnerProductCategoryDto {
    properties:           PartnerProductCategoryDtoProperties;
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface PartnerProductCategoryDtoProperties {
    partner_id:          LivingstoneSouthernWhiteFacedOwl;
    product_category_id: LivingstoneSouthernWhiteFacedOwl;
    order:               LivingstoneSouthernWhiteFacedOwl;
    created_by:          LivingstoneSouthernWhiteFacedOwl;
}

export interface PartnerUserDto {
    properties:           PartnerUserDtoProperties;
    required:             string[];
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface PartnerUserDtoProperties {
    user_id:          LivingstoneSouthernWhiteFacedOwl;
    partner_id:       LivingstoneSouthernWhiteFacedOwl;
    partner_child_id: LivingstoneSouthernWhiteFacedOwl;
    order:            LivingstoneSouthernWhiteFacedOwl;
    created_by:       LivingstoneSouthernWhiteFacedOwl;
}

export interface Product {
    properties:           ProductProperties;
    required?:            string[];
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface ProductProperties {
    id:                    LivingstoneSouthernWhiteFacedOwl;
    status:                LivingstoneSouthernWhiteFacedOwl;
    created_by:            LivingstoneSouthernWhiteFacedOwl;
    updated_by:            LivingstoneSouthernWhiteFacedOwl;
    deleted_by:            LivingstoneSouthernWhiteFacedOwl;
    created_at:            LivingstoneSouthernWhiteFacedOwl;
    updated_at:            LivingstoneSouthernWhiteFacedOwl;
    deleted_at:            LivingstoneSouthernWhiteFacedOwl;
    deleted_usr:           LivingstoneSouthernWhiteFacedOwl;
    order_id:              LivingstoneSouthernWhiteFacedOwl;
    mrkl_order_line_state: TartuGecko;
    category_code:         TartuGecko;
    category_label:        TartuGecko;
    offer_sku:             TartuGecko;
    product_sku:           TartuGecko;
    product_title:         TartuGecko;
    quantity:              LivingstoneSouthernWhiteFacedOwl;
    received_date:         LivingstoneSouthernWhiteFacedOwl;
    price:                 LivingstoneSouthernWhiteFacedOwl;
    name:                  TartuGecko;
    image:                 TartuGecko;
}

export interface ProductDto {
    properties:           ProductDtoProperties;
    required:             string[];
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface ProductDtoProperties {
    order_id:              LivingstoneSouthernWhiteFacedOwl;
    mrkl_order_line_state: TartuGecko;
    category_code:         TartuGecko;
    category_label:        TartuGecko;
    offer_sku:             TartuGecko;
    product_sku:           TartuGecko;
    product_title:         TartuGecko;
    quantity:              LivingstoneSouthernWhiteFacedOwl;
    received_date:         LivingstoneSouthernWhiteFacedOwl;
    price:                 LivingstoneSouthernWhiteFacedOwl;
    name:                  TartuGecko;
    image:                 TartuGecko;
    created_by:            LivingstoneSouthernWhiteFacedOwl;
}

export interface ArakGroundhog {
    properties:           TentacledProperties;
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface TentacledProperties {
    error: HammerfestPonies;
    data:  LogisticZones;
}

export interface ResponseAPIBankAccountArrayOrErrorException {
    properties:           ResponseAPIBankAccountArrayOrErrorExceptionProperties;
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface ResponseAPIBankAccountArrayOrErrorExceptionProperties {
    error: HammerfestPonies;
    data:  PurpleData;
}

export interface PurpleData {
    anyOf: DataAnyOf[];
}

export interface DataAnyOf {
    items?: HammerfestPonies;
    type?:  FluffyType;
    $ref?:  string;
}

export interface ResponseAPIBankAccountOrErrorException {
    properties:           ResponseAPIBankAccountOrErrorExceptionProperties;
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface ResponseAPIBankAccountOrErrorExceptionProperties {
    error: HammerfestPonies;
    data:  SchemaClass;
}

export interface SchemaClass {
    anyOf: HammerfestPonies[];
}

export interface BeijingPigeon {
    properties:           StickyProperties;
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface StickyProperties {
    error: HammerfestPonies;
    data:  HammerfestPonies;
}

export interface ShippingMethod {
    properties:           ShippingMethodProperties;
    required?:            string[];
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface ShippingMethodProperties {
    id:               LivingstoneSouthernWhiteFacedOwl;
    status:           LivingstoneSouthernWhiteFacedOwl;
    created_by:       LivingstoneSouthernWhiteFacedOwl;
    updated_by:       LivingstoneSouthernWhiteFacedOwl;
    deleted_by:       LivingstoneSouthernWhiteFacedOwl;
    created_at:       LivingstoneSouthernWhiteFacedOwl;
    updated_at:       LivingstoneSouthernWhiteFacedOwl;
    deleted_at:       LivingstoneSouthernWhiteFacedOwl;
    deleted_usr:      LivingstoneSouthernWhiteFacedOwl;
    dispatch_id:      LivingstoneSouthernWhiteFacedOwl;
    preparation_time: LivingstoneSouthernWhiteFacedOwl;
    pickup_time:      LivingstoneSouthernWhiteFacedOwl;
    shipping_time:    LivingstoneSouthernWhiteFacedOwl;
    name:             TartuGecko;
    description:      TartuGecko;
}

export interface ShippingMethodDto {
    properties:           ShippingMethodDtoProperties;
    required:             string[];
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface ShippingMethodDtoProperties {
    dispatch_id:      LivingstoneSouthernWhiteFacedOwl;
    preparation_time: LivingstoneSouthernWhiteFacedOwl;
    pickup_time:      LivingstoneSouthernWhiteFacedOwl;
    shipping_time:    LivingstoneSouthernWhiteFacedOwl;
    name:             TartuGecko;
    description:      TartuGecko;
    created_by:       LivingstoneSouthernWhiteFacedOwl;
}

export interface StateDto {
    properties:           StateDtoProperties;
    required:             string[];
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface StateDtoProperties {
    country_id: TartuGecko;
    name:       TartuGecko;
    created_by: LivingstoneSouthernWhiteFacedOwl;
    id:         LivingstoneSouthernWhiteFacedOwl;
}

export interface StatusDtoClass {
    properties:           StatusDtoProperties;
    required:             string[];
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface StatusDtoProperties {
    table:       TartuGecko;
    name:        TartuGecko;
    description: TartuGecko;
    comment:     TartuGecko;
    main?:       TartuGecko;
    created_by:  LivingstoneSouthernWhiteFacedOwl;
}

export interface Store {
    properties:           StoreProperties;
    required?:            string[];
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface StoreProperties {
    id:               LivingstoneSouthernWhiteFacedOwl;
    status:           LivingstoneSouthernWhiteFacedOwl;
    created_by:       LivingstoneSouthernWhiteFacedOwl;
    updated_by:       LivingstoneSouthernWhiteFacedOwl;
    deleted_by:       LivingstoneSouthernWhiteFacedOwl;
    created_at:       LivingstoneSouthernWhiteFacedOwl;
    updated_at:       LivingstoneSouthernWhiteFacedOwl;
    deleted_at:       LivingstoneSouthernWhiteFacedOwl;
    deleted_usr:      LivingstoneSouthernWhiteFacedOwl;
    partner_id:       LivingstoneSouthernWhiteFacedOwl;
    partner_child_id: LivingstoneSouthernWhiteFacedOwl;
    city_id:          TartuGecko;
    address:          TartuGecko;
    address_ref:      TartuGecko;
    business_hour:    TartuGecko;
    snack_time:       LivingstoneSouthernWhiteFacedOwl;
    comment:          TartuGecko;
}

export interface StoreDtoClass {
    properties:           StoreDtoProperties;
    required:             string[];
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface StoreDtoProperties {
    partner_id:              LivingstoneSouthernWhiteFacedOwl;
    partner_child_id:        LivingstoneSouthernWhiteFacedOwl;
    city_id:                 TartuGecko;
    address:                 TartuGecko;
    address_ref:             TartuGecko;
    business_hour:           TartuGecko;
    snack_time:              LivingstoneSouthernWhiteFacedOwl;
    comment:                 TartuGecko;
    created_by?:             LivingstoneSouthernWhiteFacedOwl;
    snack_time_description?: TartuGecko;
    storeCityData?:          HammerfestPonies;
}

export interface UserByID {
    properties:           UserByIDProperties;
    required:             string[];
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface UserByIDProperties {
    first_names:  TartuGecko;
    last_names:   TartuGecko;
    device_token: TartuGecko;
    email:        TartuGecko;
}

export interface UserModel {
    properties:           UserModelProperties;
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface UserModelProperties {
    id:               LivingstoneSouthernWhiteFacedOwl;
    username:         TartuGecko;
    password:         TartuGecko;
    first_names:      TartuGecko;
    last_names:       TartuGecko;
    full_name:        TartuGecko;
    device_token:     TartuGecko;
    role_id:          LivingstoneSouthernWhiteFacedOwl;
    phone:            TartuGecko;
    email:            TartuGecko;
    mailing_date:     TartuGecko;
    created_by:       LivingstoneSouthernWhiteFacedOwl;
    avatar:           TartuGecko;
    dni:              TartuGecko;
    seller_id:        LivingstoneSouthernWhiteFacedOwl;
    password_changed: TartuGecko;
    welcome:          TartuGecko;
    tutorial:         TartuGecko;
    shops_number:     LivingstoneSouthernWhiteFacedOwl;
    training_date:    LivingstoneSouthernWhiteFacedOwl;
    status:           LivingstoneSouthernWhiteFacedOwl;
    created_at:       LivingstoneSouthernWhiteFacedOwl;
    updated_at:       LivingstoneSouthernWhiteFacedOwl;
    deleted_at:       LivingstoneSouthernWhiteFacedOwl;
}

export interface UserTrainingDto {
    properties:           UserTrainingDtoProperties;
    required:             string[];
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface UserTrainingDtoProperties {
    user_id:       LivingstoneSouthernWhiteFacedOwl;
    training_id:   LivingstoneSouthernWhiteFacedOwl;
    training_date: LivingstoneSouthernWhiteFacedOwl;
    created_by:    LivingstoneSouthernWhiteFacedOwl;
}

export interface WebformModelNew {
    properties:           WebformModelNewProperties;
    type:                 TentacledType;
    additionalProperties: boolean;
}

export interface WebformModelNewProperties {
    id:                  LivingstoneSouthernWhiteFacedOwl;
    first_names:         TartuGecko;
    last_names:          TartuGecko;
    dni:                 TartuGecko;
    email:               TartuGecko;
    ruc:                 TartuGecko;
    business_name:       TartuGecko;
    trade_name:          TartuGecko;
    shop_name:           TartuGecko;
    phone:               TartuGecko;
    city_id:             TartuGecko;
    fiscal_address:      TartuGecko;
    address_ref:         TartuGecko;
    shop_type_id:        LivingstoneSouthernWhiteFacedOwl;
    product_category_id: LivingstoneSouthernWhiteFacedOwl;
    product_average:     LivingstoneSouthernWhiteFacedOwl;
    issues_invoice:      TartuGecko;
    shipping_24h:        TartuGecko;
    other_marketplaces:  OtherMarketplaces;
    comment:             TartuGecko;
    status:              LivingstoneSouthernWhiteFacedOwl;
    created_by:          LivingstoneSouthernWhiteFacedOwl;
    updated_by:          LivingstoneSouthernWhiteFacedOwl;
    partners:            Examples;
    users:               Examples;
}

export interface OtherMarketplaces {
    additionalProperties: boolean;
    type:                 TentacledType;
}

export interface Info {
    title:   string;
    version: string;
    license: License;
    contact: Examples;
}

export interface License {
    name: string;
}

export interface Paths {
    "/auth/login":                                      AuthLogin;
    "/auth/logout":                                     AuthLogin;
    "/auth/refresh-token":                              AuthLogin;
    "/auth/reset-password":                             AuthLogin;
    "/orders/filtered":                                 LoyaltyQuarter;
    "/orders/export/excel":                             LoyaltyQuarter;
    "/orders/search":                                   LoyaltyQuarter;
    "/orders/{id}":                                     LoyaltyQuarter;
    "/orders":                                          LoyaltyQuarter;
    "/orders/{id}/update_order_status":                 AuthLogin;
    "/orders/{id}/update_order_status_stable/evidence": AuthLogin;
    "/orders/assign-orders":                            AuthLogin;
    "/orders/confirmed-orders-to-assign":               LoyaltyQuarter;
    "/product":                                         TrapaniSnowLeopard;
    "/customer":                                        TrapaniSnowLeopard;
    "/users":                                           Users;
    "/users/mail_new_sellers":                          UsersMailNewSellers;
    "/users/id":                                        UsersID;
    "/webform":                                         TrapaniSnowLeopard;
    "/vehicle/id":                                      VehicleID;
    "/vehicle":                                         Vehicle;
    "/routing":                                         Routing;
    "/routing/start":                                   RoutingStart;
    "/routing/end":                                     RoutingEnd;
    "/routing/programados":                             RoutingProgramados;
    "/notifications":                                   Notifications;
    "/country":                                         Country;
    "/state":                                           State;
    "/county":                                          CityClass;
    "/city":                                            CityClass;
    "/schedule":                                        Schedule;
    "/dispatch":                                        TrapaniSnowLeopard;
    "/shipping_method":                                 Schedule;
    "/currency":                                        TrapaniSnowLeopard;
    "/bank":                                            TrapaniSnowLeopard;
    "/bank_account":                                    TrapaniSnowLeopard;
    "/type":                                            Schedule;
    "/store":                                           TrapaniSnowLeopard;
    "/partner":                                         Partner;
    "/partner/search":                                  PartnerSearch;
    "/partner/full_partner":                            PartnerFullPartner;
    "/partner/pdf/createSeller":                        LoyaltyQuarter;
    "/partner_user":                                    TrapaniSnowLeopard;
    "/partner_user/detail":                             Partner;
    "/contact":                                         TrapaniSnowLeopard;
    "/training":                                        Schedule;
    "/reason":                                          TrapaniSnowLeopard;
    "/mail":                                            AuthLogin;
    "/mail/successfulRegistration":                     AuthLogin;
    "/mail/reviewRequest":                              AuthLogin;
    "/mail/rejectRequest":                              AuthLogin;
    "/extra/migration":                                 AuthLogin;
    "/info":                                            TrapaniSnowLeopard;
    "/loyalty":                                         TrapaniSnowLeopard;
    "/loyalty/quarter":                                 LoyaltyQuarter;
    "/loyalty/quarterByMiraklShopId":                   LoyaltyQuarter;
    "/loyalty/excelUpload":                             AuthLogin;
    "/loyalty_history":                                 TrapaniSnowLeopard;
    "/tier":                                            TrapaniSnowLeopard;
    "/automatic/seller":                                AuthLogin;
    "/business_unit":                                   TrapaniSnowLeopard;
    "/product_category":                                TrapaniSnowLeopard;
    "/marketplace":                                     TrapaniSnowLeopard;
    "/entity_type":                                     TrapaniSnowLeopard;
    "/partner_logistic":                                TrapaniSnowLeopard;
    "/partner_logistic_zone":                           TrapaniSnowLeopard;
    "/partner_product_category":                        TrapaniSnowLeopard;
    "/business_division":                               TrapaniSnowLeopard;
    "/partner_bank":                                    TrapaniSnowLeopard;
    "/loyalty_category":                                TrapaniSnowLeopard;
    "/partner_history":                                 TrapaniSnowLeopard;
    "/shipping_zone":                                   Schedule;
    "/user_training":                                   Schedule;
    "/order_status_history":                            TrapaniSnowLeopard;
    "/status":                                          TrapaniSnowLeopard;
    "/significant_date":                                TrapaniSnowLeopard;
}

export interface AuthLogin {
    post: GetClass;
}

export interface GetClass {
    operationId:                        string;
    responses:                          PurpleResponses;
    tags:                               string[];
    security:                           any[];
    parameters:                         any[];
    "x-amazon-apigateway-integration"?: XAmazonApigatewayIntegration;
}

export interface PurpleResponses {
    "200": Purple200;
}

export interface Purple200 {
    description: Description;
    content:     PurpleContent;
}

export interface PurpleContent {
    "application/json": PurpleApplicationJSON;
}

export interface PurpleApplicationJSON {
    schema: Examples;
}

export enum Description {
    Ok = "Ok",
}

export interface XAmazonApigatewayIntegration {
    uri:                 string;
    responses:           XAmazonApigatewayIntegrationResponses;
    passthroughBehavior: string;
    connectionType:      string;
    connectionId:        string;
    httpMethod:          string;
    type:                string;
}

export interface XAmazonApigatewayIntegrationResponses {
    default: Default;
}

export interface Default {
    statusCode: string;
}

export interface TrapaniSnowLeopard {
    get:    PurpleGet;
    post:   PurpleDelete;
    patch:  PurpleDelete;
    delete: PurpleDelete;
}

export interface PurpleDelete {
    operationId:  OperationID;
    responses:    FluffyResponses;
    tags:         string[];
    security:     any[];
    parameters:   Parameter[];
    requestBody?: RequestBody;
}

export enum OperationID {
    Create = "Create",
    CreateFullPartner = "CreateFullPartner",
    Delete = "Delete",
    Retrieve = "Retrieve",
    RetrieveMany = "RetrieveMany",
    Update = "Update",
    UpdateFullPartner = "UpdateFullPartner",
}

export interface Parameter {
    in:       In;
    name:     Name;
    required: boolean;
    schema:   LivingstoneSouthernWhiteFacedOwl;
}

export enum In {
    Query = "query",
}

export enum Name {
    ID = "id",
}

export interface RequestBody {
    required: boolean;
    content:  RequestBodyContent;
}

export interface RequestBodyContent {
    "application/json": FluffyApplicationJSON;
}

export interface FluffyApplicationJSON {
    schema: HammerfestPonies;
}

export interface FluffyResponses {
    "200": Fluffy200;
}

export interface Fluffy200 {
    description: Description;
    content:     RequestBodyContent;
}

export interface PurpleGet {
    operationId: OperationID;
    responses:   FluffyResponses;
    tags:        string[];
    security:    any[];
    parameters:  any[];
}

export interface CityClass {
    get:    PurpleDelete;
    post:   PurpleDelete;
    patch:  PurpleDelete;
    delete: PurpleDelete;
}

export interface Country {
    get:    PurpleDelete;
    post:   PurpleDelete;
    patch:  PurpleDelete;
    delete: FluffyDelete;
}

export interface FluffyDelete {
    operationId:  OperationID;
    responses:    TentacledResponses;
    tags:         string[];
    security:     any[];
    parameters:   Parameter[];
    requestBody?: RequestBody;
}

export interface TentacledResponses {
    "200": Tentacled200;
}

export interface Tentacled200 {
    description: Description;
    content:     FluffyContent;
}

export interface FluffyContent {
    "application/json": TentacledApplicationJSON;
}

export interface TentacledApplicationJSON {
    schema: SchemaClass;
}

export interface LoyaltyQuarter {
    get: GetClass;
}

export interface Notifications {
    get:   NotificationsGet;
    patch: NotificationsPatch;
}

export interface NotificationsGet {
    operationId: string;
    responses:   StickyResponses;
    tags:        string[];
    security:    any[];
    parameters:  any[];
}

export interface StickyResponses {
    "200": Sticky200;
}

export interface Sticky200 {
    description: Description;
    content:     TentacledContent;
}

export interface TentacledContent {
    "application/json": StickyApplicationJSON;
}

export interface StickyApplicationJSON {
    schema: PurpleSchema;
}

export interface PurpleSchema {
    properties: IndigoProperties;
    required:   string[];
    type:       TentacledType;
}

export interface IndigoProperties {
    results: DataClass;
    status:  TartuGecko;
}

export interface DataClass {
    items: Examples;
    type:  FluffyType;
}

export interface NotificationsPatch {
    operationId: string;
    responses:   IndigoResponses;
    tags:        string[];
    security:    any[];
    parameters:  any[];
}

export interface IndigoResponses {
    "200": Indigo200;
}

export interface Indigo200 {
    description: Description;
    content:     StickyContent;
}

export interface StickyContent {
    "application/json": IndigoApplicationJSON;
}

export interface IndigoApplicationJSON {
    schema: FluffySchema;
}

export interface FluffySchema {
    properties: IndecentProperties;
    required:   string[];
    type:       TentacledType;
}

export interface IndecentProperties {
    status: TartuGecko;
}

export interface Partner {
    get: PartnerGet;
}

export interface PartnerGet {
    operationId: string;
    responses:   IndecentResponses;
    tags:        string[];
    security:    any[];
    parameters:  any[];
}

export interface IndecentResponses {
    "200": Indecent200;
}

export interface Indecent200 {
    description: Description;
    content:     IndigoContent;
}

export interface IndigoContent {
    "application/json": IndecentApplicationJSON;
}

export interface IndecentApplicationJSON {
    schema: TentacledSchema;
}

export interface TentacledSchema {
    anyOf: PurpleAnyOf[];
}

export interface PurpleAnyOf {
    $ref?:       string;
    properties?: HilariousProperties;
    required?:   string[];
    type?:       TentacledType;
}

export interface HilariousProperties {
    data: LogisticZones;
}

export interface PartnerFullPartner {
    get:   PartnerFullPartnerGet;
    post:  PurpleDelete;
    patch: PurpleDelete;
}

export interface PartnerFullPartnerGet {
    operationId: string;
    responses:   HilariousResponses;
    tags:        string[];
    security:    any[];
    parameters:  any[];
}

export interface HilariousResponses {
    "200": Hilarious200;
}

export interface Hilarious200 {
    description: Description;
    content:     IndecentContent;
}

export interface IndecentContent {
    "application/json": HilariousApplicationJSON;
}

export interface HilariousApplicationJSON {
    schema: StickySchema;
}

export interface StickySchema {
    anyOf: SchemaElement[];
}

export interface SchemaElement {
    $ref?:       string;
    properties?: AmbitiousProperties;
    required?:   string[];
    type?:       TentacledType;
}

export interface AmbitiousProperties {
    data: HammerfestPonies;
}

export interface PartnerSearch {
    get: PartnerSearchGet;
}

export interface PartnerSearchGet {
    operationId: string;
    responses:   AmbitiousResponses;
    tags:        string[];
    security:    any[];
    parameters:  any[];
}

export interface AmbitiousResponses {
    "200": Ambitious200;
}

export interface Ambitious200 {
    description: Description;
    content:     HilariousContent;
}

export interface HilariousContent {
    "application/json": AmbitiousApplicationJSON;
}

export interface AmbitiousApplicationJSON {
    schema: IndigoSchema;
}

export interface IndigoSchema {
    anyOf: FluffyAnyOf[];
}

export interface FluffyAnyOf {
    $ref?:       string;
    properties?: CunningProperties;
    required?:   string[];
    type?:       TentacledType;
}

export interface CunningProperties {
    data: DataClass;
}

export interface Routing {
    get: NotificationsGet;
}

export interface RoutingEnd {
    post: DeleteClass;
}

export interface DeleteClass {
    operationId: string;
    responses:   CunningResponses;
    tags:        string[];
    security:    any[];
    parameters:  any[];
}

export interface CunningResponses {
    "200": Cunning200;
}

export interface Cunning200 {
    description: Description;
    content:     AmbitiousContent;
}

export interface AmbitiousContent {
    "application/json": CunningApplicationJSON;
}

export interface CunningApplicationJSON {
    schema: IndecentSchema;
}

export interface IndecentSchema {
    properties: MagentaProperties;
    required:   string[];
    type:       TentacledType;
}

export interface MagentaProperties {
    message: TartuGecko;
    status:  TartuGecko;
}

export interface RoutingProgramados {
    get: RoutingProgramadosGet;
}

export interface RoutingProgramadosGet {
    operationId: string;
    responses:   MagentaResponses;
    tags:        string[];
    security:    any[];
    parameters:  any[];
}

export interface MagentaResponses {
    "200": Magenta200;
}

export interface Magenta200 {
    description: Description;
    content:     CunningContent;
}

export interface CunningContent {
    "application/json": MagentaApplicationJSON;
}

export interface MagentaApplicationJSON {
    schema: HilariousSchema;
}

export interface HilariousSchema {
    properties: FriskyProperties;
    required:   string[];
    type:       TentacledType;
}

export interface FriskyProperties {
    results:  DataClass;
    route_id: TartuGecko;
    count:    LivingstoneSouthernWhiteFacedOwl;
    status:   TartuGecko;
}

export interface RoutingStart {
    post: RoutingStartPost;
}

export interface RoutingStartPost {
    operationId: string;
    responses:   FriskyResponses;
    tags:        string[];
    security:    any[];
    parameters:  any[];
}

export interface FriskyResponses {
    "200": Frisky200;
}

export interface Frisky200 {
    description: Description;
    content:     MagentaContent;
}

export interface MagentaContent {
    "application/json": FriskyApplicationJSON;
}

export interface FriskyApplicationJSON {
    schema: LogisticZones;
}

export interface Schedule {
    get:    TentacledDelete;
    post:   FluffyDelete;
    patch:  FluffyDelete;
    delete: TentacledDelete;
}

export interface TentacledDelete {
    operationId: OperationID;
    responses:   TentacledResponses;
    tags:        string[];
    security:    any[];
    parameters:  Parameter[];
}

export interface State {
    get:    FluffyDelete;
    post:   FluffyDelete;
    patch:  FluffyDelete;
    delete: FluffyDelete;
}

export interface Users {
    get:    UsersGet;
    post:   UsersPost;
    patch:  UsersPatch;
    delete: DeleteClass;
}

export interface UsersGet {
    operationId: string;
    responses:   MischievousResponses;
    tags:        string[];
    security:    any[];
    parameters:  any[];
}

export interface MischievousResponses {
    "200": Mischievous200;
}

export interface Mischievous200 {
    description: Description;
    content:     FriskyContent;
}

export interface FriskyContent {
    "application/json": MischievousApplicationJSON;
}

export interface MischievousApplicationJSON {
    schema: AmbitiousSchema;
}

export interface AmbitiousSchema {
    properties: MischievousProperties;
    required:   string[];
    type:       TentacledType;
}

export interface MischievousProperties {
    results: LogisticZones;
    status:  TartuGecko;
}

export interface UsersPatch {
    operationId: string;
    responses:   BraggadociousResponses;
    tags:        string[];
    security:    any[];
    parameters:  any[];
}

export interface BraggadociousResponses {
    "200": Braggadocious200;
}

export interface Braggadocious200 {
    description: Description;
    content:     MischievousContent;
}

export interface MischievousContent {
    "application/json": BraggadociousApplicationJSON;
}

export interface BraggadociousApplicationJSON {
    schema: CunningSchema;
}

export interface CunningSchema {
    properties: BraggadociousProperties;
    required:   string[];
    type:       TentacledType;
}

export interface BraggadociousProperties {
    data: SchemaClass;
}

export interface UsersPost {
    operationId: string;
    responses:   Responses1;
    tags:        string[];
    security:    any[];
    parameters:  any[];
}

export interface Responses1 {
    "200": The200_1;
}

export interface The200_1 {
    description: Description;
    content:     BraggadociousContent;
}

export interface BraggadociousContent {
    "application/json": ApplicationJSON1;
}

export interface ApplicationJSON1 {
    schema: MagentaSchema;
}

export interface MagentaSchema {
    properties: Properties1;
    required:   string[];
    type:       TentacledType;
}

export interface Properties1 {
    results: PurpleResults;
    message: TartuGecko;
    status:  TartuGecko;
}

export interface PurpleResults {
    properties: Properties2;
    required:   Name[];
    type:       TentacledType;
}

export interface Properties2 {
    id: LivingstoneSouthernWhiteFacedOwl;
}

export interface UsersID {
    get: UsersIDGet;
}

export interface UsersIDGet {
    operationId: string;
    responses:   Responses2;
    tags:        string[];
    security:    any[];
    parameters:  any[];
}

export interface Responses2 {
    "200": The200_2;
}

export interface The200_2 {
    description: Description;
    content:     Content1;
}

export interface Content1 {
    "application/json": ApplicationJSON2;
}

export interface ApplicationJSON2 {
    schema: SchemaElement;
}

export interface UsersMailNewSellers {
    get: UsersMailNewSellersGet;
}

export interface UsersMailNewSellersGet {
    operationId: string;
    responses:   Responses3;
    tags:        string[];
    security:    any[];
    parameters:  any[];
}

export interface Responses3 {
    "200": The200_3;
}

export interface The200_3 {
    description: Description;
    content:     Content2;
}

export interface Content2 {
    "application/json": ApplicationJSON3;
}

export interface ApplicationJSON3 {
    schema: FriskySchema;
}

export interface FriskySchema {
    properties: Examples;
    type:       TentacledType;
}

export interface Vehicle {
    get:   NotificationsGet;
    post:  VehiclePost;
    patch: DeleteClass;
}

export interface VehiclePost {
    operationId: string;
    responses:   Responses4;
    tags:        string[];
    security:    any[];
    parameters:  any[];
}

export interface Responses4 {
    "200": The200_4;
}

export interface The200_4 {
    description: Description;
    content:     Content3;
}

export interface Content3 {
    "application/json": ApplicationJSON4;
}

export interface ApplicationJSON4 {
    schema: MischievousSchema;
}

export interface MischievousSchema {
    properties: Properties3;
    required:   string[];
    type:       TentacledType;
}

export interface Properties3 {
    results: FluffyResults;
    message: TartuGecko;
    status:  TartuGecko;
}

export interface FluffyResults {
    properties: Properties4;
    required:   string[];
    type:       TentacledType;
}

export interface Properties4 {
    vehicle_id: TartuGecko;
}

export interface VehicleID {
    get:   VehicleIDGet;
    patch: DeleteClass;
}

export interface VehicleIDGet {
    operationId: string;
    responses:   Responses5;
    tags:        string[];
    security:    any[];
    parameters:  any[];
}

export interface Responses5 {
    "200": The200_5;
}

export interface The200_5 {
    description: Description;
    content:     Content4;
}

export interface Content4 {
    "application/json": ApplicationJSON5;
}

export interface ApplicationJSON5 {
    schema: BraggadociousSchema;
}

export interface BraggadociousSchema {
    properties: Properties5;
    required:   string[];
    type:       TentacledType;
}

export interface Properties5 {
    results: TentacledResults;
    status:  TartuGecko;
}

export interface TentacledResults {
    properties: Properties6;
    required:   string[];
    type:       TentacledType;
}

export interface Properties6 {
    state:           LivingstoneSouthernWhiteFacedOwl;
    phone:           TartuGecko;
    vehicle_type:    TartuGecko;
    vehicle_type_id: LivingstoneSouthernWhiteFacedOwl;
    car_plate:       TartuGecko;
}

export interface Server {
    url: string;
}
