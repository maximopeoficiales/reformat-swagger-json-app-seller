// Generated by https://quicktype.io
export interface XAmazonApigatewayIntegration {
    uri:                 string;
    responses:           XAmazonApigatewayIntegrationResponses;
    passthroughBehavior: string;
    connectionType:      string;
    connectionId:        string;
    httpMethod:          string;
    type:                string;
}

export interface XAmazonApigatewayIntegrationResponses {
    default: any;
}
export interface Swagger {
	components: Components;
	info:       Info;
	openapi:    string;
	paths:      Paths;
	servers:    Server[];
}

export interface Components {
	examples:        Examples;
	headers:         Examples;
	parameters:      Examples;
	requestBodies:   Examples;
	responses:       Examples;
	schemas:         Schemas;
	securitySchemes: Examples;
}

export interface Examples {
}

export interface Schemas {
	Partial_User_:                                      PartialUser;
	ResponseLogin:                                      ResponseLogin;
	Error:                                              Error;
	ResponseApi_ResponseLogin_:                         BeijingPigeon;
	RequestLogin:                                       RequestLogin;
	ResponseApi_null_:                                  ResponseAPINull;
	Product:                                            Product;
	"ResponseApi_Product-Array_":                       ArakGroundhog;
	ResponseApi_Product_:                               BeijingPigeon;
	ProductDto:                                         ProductDto;
	ProductUpdate:                                      Product;
	Customer:                                           Customer;
	"ResponseApi_Customer-Array_":                      ArakGroundhog;
	ResponseApi_Customer_:                              BeijingPigeon;
	CustomerDto:                                        CustomerDto;
	CustomerUpdate:                                     Customer;
	User:                                               User;
	"ResponseApi_User-Array_":                          ArakGroundhog;
	ResponseApi_User_:                                  BeijingPigeon;
	UserDto:                                            UserDto;
	UserUpdate:                                         User;
	FullWebform:                                        FullWebform;
	"ResponseApi_FullWebform-Array_":                   ArakGroundhog;
	Webform:                                            FullWebform;
	ResponseApi_Webform_:                               BeijingPigeon;
	WebformDto:                                         WebformDto;
	WebformUpdate:                                      FullWebform;
	Vehicle:                                            Vehicle;
	"ResponseApi_Vehicle-Array_":                       ArakGroundhog;
	ResponseApi_Vehicle_:                               BeijingPigeon;
	VehicleDto:                                         VehicleDto;
	VehicleUpdate:                                      Vehicle;
	OrderModel:                                         OrderModel;
	Notification:                                       Notification;
	"ResponseApi_Notification-Array_":                  ArakGroundhog;
	ResponseApi_Notification_:                          BeijingPigeon;
	NotificationDto:                                    NotificationDto;
	NotificationUpdate:                                 Notification;
	Country:                                            PurpleCity;
	"ResponseApi_Country-Array_":                       ArakGroundhog;
	ResponseApi_Country_:                               BeijingPigeon;
	CountryDto:                                         YDto;
	CountryUpdate:                                      PurpleCity;
	ErrorException:                                     ErrorException;
	State:                                              PurpleCity;
	"ResponseApi_State-Array_":                         ArakGroundhog;
	ResponseApi_State_:                                 BeijingPigeon;
	StateDto:                                           StateDto;
	StateUpdate:                                        PurpleCity;
	County:                                             PurpleCity;
	"ResponseApi_County-Array_":                        ArakGroundhog;
	ResponseApi_County_:                                BeijingPigeon;
	CountyDto:                                          YDto;
	CountyUpdate:                                       PurpleCity;
	City:                                               PurpleCity;
	"ResponseApi_City-Array_":                          ArakGroundhog;
	ResponseApi_City_:                                  BeijingPigeon;
	CityDto:                                            YDto;
	CityUpdate:                                         PurpleCity;
	Schedule:                                           PuneHedgehog;
	"ResponseApi_Schedule-Array_":                      ArakGroundhog;
	ResponseApi_Schedule_:                              BeijingPigeon;
	ScheduleDto:                                        BankAccountDtoClass;
	ScheduleUpdate:                                     PuneHedgehog;
	Dispatch:                                           PuneHedgehog;
	"ResponseApi_Dispatch-Array_":                      ArakGroundhog;
	ResponseApi_Dispatch_:                              BeijingPigeon;
	DispatchDto:                                        BankAccountDtoClass;
	DispatchUpdate:                                     PuneHedgehog;
	ShippingMethod:                                     ShippingMethod;
	"ResponseApi_ShippingMethod-Array_":                ArakGroundhog;
	ResponseApi_ShippingMethod_:                        BeijingPigeon;
	ShippingMethodDto:                                  ShippingMethodDto;
	ShippingMethodUpdate:                               ShippingMethod;
	Currency:                                           PuneHedgehog;
	"ResponseApi_Currency-Array_":                      ArakGroundhog;
	ResponseApi_Currency_:                              BeijingPigeon;
	CurrencyDto:                                        BankAccountDtoClass;
	CurrencyUpdate:                                     PuneHedgehog;
	Bank:                                               PuneHedgehog;
	"ResponseApi_Bank-Array_":                          ArakGroundhog;
	ResponseApi_Bank_:                                  BeijingPigeon;
	BankDto:                                            BankAccountDtoClass;
	BankUpdate:                                         PuneHedgehog;
	BankAccount:                                        PuneHedgehog;
	"ResponseApi_BankAccount-Array-or-ErrorException_": ResponseAPIBankAccountArrayOrErrorException;
	"ResponseApi_BankAccount-or-ErrorException_":       ResponseAPIBankAccountOrErrorException;
	BankAccountDto:                                     BankAccountDtoClass;
	BankAccountUpdate:                                  PuneHedgehog;
	Type:                                               PuneHedgehog;
	"ResponseApi_Type-Array_":                          ArakGroundhog;
	ResponseApi_Type_:                                  BeijingPigeon;
	TypeDto:                                            StatusDtoClass;
	TypeUpdate:                                         PuneHedgehog;
	Store:                                              Store;
	"ResponseApi_Store-Array_":                         ArakGroundhog;
	ResponseApi_Store_:                                 BeijingPigeon;
	StoreDto:                                           StoreDtoClass;
	StoreUpdate:                                        Store;
	PartnerProductCategory:                             PuneHedgehog;
	MarketplaceModel:                                   EModel;
	Partner:                                            PartnerClass;
	"ResponseApi_Partner-Array_":                       ArakGroundhog;
	ResponseApi_Partner_:                               BeijingPigeon;
	PartnerDto:                                         PartnerClass;
	PartnerUpdate:                                      PartnerClass;
	PartnerLogisticZone:                                PuneHedgehog;
	PartnerLogistic:                                    PuneHedgehog;
	PartnerBank:                                        PartnerBank;
	PartnerUser:                                        PuneHedgehog;
	ContactDetailModel:                                 ContactDetailModel;
	Contact:                                            PuneHedgehog;
	FullInformationCity:                                FullInformationCity;
	StoreModelPDF:                                      StoreDtoClass;
	ShippingZoneModel:                                  EModel;
	LogisticZonePDF:                                    LogisticZonePDF;
	FullPartner:                                        FullPartner;
	ResponseApi_FullPartner_:                           BeijingPigeon;
	"ResponseApi_PartnerUser-Array_":                   ArakGroundhog;
	ResponseApi_PartnerUser_:                           BeijingPigeon;
	PartnerUserDto:                                     PartnerUserDto;
	PartnerUserUpdate:                                  PuneHedgehog;
	"ResponseApi_Contact-Array_":                       ArakGroundhog;
	ResponseApi_Contact_:                               BeijingPigeon;
	ContactDto:                                         ContactDto;
	ContactUpdate:                                      PuneHedgehog;
	Training:                                           PuneHedgehog;
	"ResponseApi_Training-Array_":                      ArakGroundhog;
	ResponseApi_Training_:                              BeijingPigeon;
	TrainingDto:                                        BankAccountDtoClass;
	TrainingUpdate:                                     PuneHedgehog;
	Reason:                                             PuneHedgehog;
	"ResponseApi_Reason-Array_":                        ArakGroundhog;
	ResponseApi_Reason_:                                BeijingPigeon;
	ReasonDto:                                          BankAccountDtoClass;
	ReasonUpdate:                                       PuneHedgehog;
	ResponseApi_boolean_:                               ResponseAPIBoolean;
	WelcomeMailModel:                                   WelcomeMailModel;
	SuccessfulRegistrationShop:                         SuccessfulRegistrationShop;
	ReviewRequestShop:                                  ReviewRequestShop;
	Info:                                               PuneHedgehog;
	"ResponseApi_Info-Array_":                          ArakGroundhog;
	ResponseApi_Info_:                                  BeijingPigeon;
	InfoDto:                                            BankAccountDtoClass;
	InfoUpdate:                                         PuneHedgehog;
	Loyalty:                                            PuneHedgehog;
	"ResponseApi_Loyalty-Array_":                       ArakGroundhog;
	ResponseApi_Loyalty_:                               BeijingPigeon;
	LoyaltyDto:                                         LoyaltyDto;
	LoyaltyUpdate:                                      PuneHedgehog;
	LoyaltyHistory:                                     LoyaltyHistory;
	"ResponseApi_LoyaltyHistory-Array_":                ArakGroundhog;
	ResponseApi_LoyaltyHistory_:                        BeijingPigeon;
	LoyaltyHistoryDto:                                  LoyaltyHistoryDto;
	LoyaltyHistoryUpdate:                               LoyaltyHistory;
	Tier:                                               PuneHedgehog;
	"ResponseApi_Tier-Array_":                          ArakGroundhog;
	ResponseApi_Tier_:                                  BeijingPigeon;
	TierDto:                                            BankAccountDtoClass;
	TierUpdate:                                         PuneHedgehog;
	BusinessUnit:                                       PuneHedgehog;
	"ResponseApi_BusinessUnit-Array_":                  ArakGroundhog;
	ResponseApi_BusinessUnit_:                          BeijingPigeon;
	BusinessUnitDto:                                    BankAccountDtoClass;
	BusinessUnitUpdate:                                 PuneHedgehog;
	ProductCategory:                                    PuneHedgehog;
	"ResponseApi_ProductCategory-Array_":               ArakGroundhog;
	ResponseApi_ProductCategory_:                       BeijingPigeon;
	ProductCategoryDto:                                 BankAccountDtoClass;
	ProductCategoryUpdate:                              PuneHedgehog;
	Marketplace:                                        PuneHedgehog;
	"ResponseApi_Marketplace-Array_":                   ArakGroundhog;
	ResponseApi_Marketplace_:                           BeijingPigeon;
	MarketplaceDto:                                     BankAccountDtoClass;
	MarketplaceUpdate:                                  PuneHedgehog;
	EntityType:                                         PuneHedgehog;
	"ResponseApi_EntityType-Array_":                    ArakGroundhog;
	ResponseApi_EntityType_:                            BeijingPigeon;
	EntityTypeDto:                                      BankAccountDtoClass;
	EntityTypeUpdate:                                   PuneHedgehog;
	"ResponseApi_PartnerLogistic-Array_":               ArakGroundhog;
	ResponseApi_PartnerLogistic_:                       BeijingPigeon;
	PartnerLogisticDto:                                 PartnerLogisticDto;
	PartnerLogisticUpdate:                              PuneHedgehog;
	"ResponseApi_PartnerLogisticZone-Array_":           ArakGroundhog;
	ResponseApi_PartnerLogisticZone_:                   BeijingPigeon;
	PartnerLogisticZoneDto:                             LogisticZonePDF;
	PartnerLogisticZoneUpdate:                          PuneHedgehog;
	"ResponseApi_PartnerProductCategory-Array_":        ArakGroundhog;
	ResponseApi_PartnerProductCategory_:                BeijingPigeon;
	PartnerProductCategoryDto:                          PartnerProductCategoryDto;
	PartnerProductCategoryUpdate:                       PuneHedgehog;
	BusinessDivision:                                   PuneHedgehog;
	"ResponseApi_BusinessDivision-Array_":              ArakGroundhog;
	ResponseApi_BusinessDivision_:                      BeijingPigeon;
	BusinessDivisionDto:                                BankAccountDtoClass;
	BusinessDivisionUpdate:                             PuneHedgehog;
	"ResponseApi_PartnerBank-Array_":                   ArakGroundhog;
	ResponseApi_PartnerBank_:                           BeijingPigeon;
	PartnerBankDto:                                     PartnerBankDto;
	PartnerBankUpdate:                                  PartnerBank;
	LoyaltyCategory:                                    PuneHedgehog;
	"ResponseApi_LoyaltyCategory-Array_":               ArakGroundhog;
	ResponseApi_LoyaltyCategory_:                       BeijingPigeon;
	LoyaltyCategoryDto:                                 BankAccountDtoClass;
	LoyaltyCategoryUpdate:                              PuneHedgehog;
	PartnerHistory:                                     PartnerHistory;
	"ResponseApi_PartnerHistory-Array_":                ArakGroundhog;
	ResponseApi_PartnerHistory_:                        BeijingPigeon;
	PartnerHistoryDto:                                  PartnerHistoryDto;
	PartnerHistoryUpdate:                               PartnerHistory;
	ShippingZone:                                       PuneHedgehog;
	"ResponseApi_ShippingZone-Array_":                  ArakGroundhog;
	ResponseApi_ShippingZone_:                          BeijingPigeon;
	ShippingZoneDto:                                    BankAccountDtoClass;
	ShippingZoneUpdate:                                 PuneHedgehog;
	UserTraining:                                       PuneHedgehog;
	"ResponseApi_UserTraining-Array_":                  ArakGroundhog;
	ResponseApi_UserTraining_:                          BeijingPigeon;
	UserTrainingDto:                                    UserTrainingDto;
	UserTrainingUpdate:                                 PuneHedgehog;
	OrderStatusHistory:                                 OrderStatusHistory;
	"ResponseApi_OrderStatusHistory-Array_":            ArakGroundhog;
	ResponseApi_OrderStatusHistory_:                    BeijingPigeon;
	OrderStatusHistoryDto:                              OrderStatusHistoryDto;
	OrderStatusHistoryUpdate:                           OrderStatusHistory;
	Status:                                             PuneHedgehog;
	"ResponseApi_Status-Array_":                        ArakGroundhog;
	ResponseApi_Status_:                                BeijingPigeon;
	StatusDto:                                          StatusDtoClass;
	StatusUpdate:                                       PuneHedgehog;
	SignificantDate:                                    PuneHedgehog;
	"ResponseApi_SignificantDate-Array_":               ArakGroundhog;
	ResponseApi_SignificantDate_:                       BeijingPigeon;
	SignificantDateDto:                                 BankAccountDtoClass;
	SignificantDateUpdate:                              PuneHedgehog;
}

export interface PuneHedgehog {
	properties:           PurpleProperties;
	required?:            string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface PurpleProperties {
	id:                    LivingstoneSouthernWhiteFacedOwl;
	status:                LivingstoneSouthernWhiteFacedOwl;
	created_by:            LivingstoneSouthernWhiteFacedOwl;
	updated_by:            LivingstoneSouthernWhiteFacedOwl;
	deleted_by:            LivingstoneSouthernWhiteFacedOwl;
	created_at:            LivingstoneSouthernWhiteFacedOwl;
	updated_at:            LivingstoneSouthernWhiteFacedOwl;
	deleted_at:            LivingstoneSouthernWhiteFacedOwl;
	deleted_usr:           LivingstoneSouthernWhiteFacedOwl;
	name?:                 TartuGecko;
	description?:          TartuGecko;
	business_unit_id?:     LivingstoneSouthernWhiteFacedOwl;
	partner_id?:           LivingstoneSouthernWhiteFacedOwl;
	detail?:               HammerfestPonies;
	type_id?:              LivingstoneSouthernWhiteFacedOwl;
	info_id?:              LivingstoneSouthernWhiteFacedOwl;
	mrkl_shop_id?:         LivingstoneSouthernWhiteFacedOwl;
	shop_name?:            TartuGecko;
	username?:             TartuGecko;
	shipping_method_id?:   LivingstoneSouthernWhiteFacedOwl;
	logistic_zones?:       LogisticZones;
	order?:                LivingstoneSouthernWhiteFacedOwl;
	partner_logistic_id?:  LivingstoneSouthernWhiteFacedOwl;
	shipping_zone_id?:     LivingstoneSouthernWhiteFacedOwl;
	freight_cost?:         LivingstoneSouthernWhiteFacedOwl;
	product_category_id?:  LivingstoneSouthernWhiteFacedOwl;
	user_id?:              LivingstoneSouthernWhiteFacedOwl;
	partner_child_id?:     LivingstoneSouthernWhiteFacedOwl;
	business_division_id?: LivingstoneSouthernWhiteFacedOwl;
	auto_reprogramming?:   TartuGecko;
	date?:                 LivingstoneSouthernWhiteFacedOwl;
	table?:                TartuGecko;
	comment?:              TartuGecko;
	main?:                 TartuGecko;
	training_id?:          LivingstoneSouthernWhiteFacedOwl;
	training_date?:        LivingstoneSouthernWhiteFacedOwl;
}

export interface TartuGecko {
	type: PurpleType;
}

export enum PurpleType {
	Boolean = "boolean",
	Number = "number",
	String = "string",
}

export interface LivingstoneSouthernWhiteFacedOwl {
	type:    PurpleType;
	format?: Format;
}

export enum Format {
	DateTime = "date-time",
	Double = "double",
}

export interface HammerfestPonies {
	$ref?: string;
}

export interface LogisticZones {
	items: HammerfestPonies;
	type:  FluffyType;
}

export enum FluffyType {
	Array = "array",
}

export enum TentacledType {
	Object = "object",
}

export interface BankAccountDtoClass {
	properties:           FluffyProperties;
	required:             string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface FluffyProperties {
	name?:                 TartuGecko;
	description:           TartuGecko;
	created_by:            LivingstoneSouthernWhiteFacedOwl;
	business_unit_id?:     LivingstoneSouthernWhiteFacedOwl;
	type_id?:              LivingstoneSouthernWhiteFacedOwl;
	info_id?:              LivingstoneSouthernWhiteFacedOwl;
	business_division_id?: LivingstoneSouthernWhiteFacedOwl;
	auto_reprogramming?:   TartuGecko;
	date?:                 LivingstoneSouthernWhiteFacedOwl;
}

export interface PurpleCity {
	properties:           CityProperties;
	required?:            string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface CityProperties {
	id:          TartuGecko;
	status:      LivingstoneSouthernWhiteFacedOwl;
	created_by:  LivingstoneSouthernWhiteFacedOwl;
	updated_by:  LivingstoneSouthernWhiteFacedOwl;
	deleted_by:  LivingstoneSouthernWhiteFacedOwl;
	created_at:  LivingstoneSouthernWhiteFacedOwl;
	updated_at:  LivingstoneSouthernWhiteFacedOwl;
	deleted_at:  LivingstoneSouthernWhiteFacedOwl;
	deleted_usr: LivingstoneSouthernWhiteFacedOwl;
	county_id?:  TartuGecko;
	name:        TartuGecko;
	iso?:        TartuGecko;
	state_id?:   TartuGecko;
	country_id?: TartuGecko;
}

export interface YDto {
	properties:           CityDtoProperties;
	required:             string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface CityDtoProperties {
	county_id?: TartuGecko;
	name:       TartuGecko;
	created_by: LivingstoneSouthernWhiteFacedOwl;
	id:         TartuGecko;
	iso?:       TartuGecko;
	state_id?:  TartuGecko;
}

export interface ContactDetailModel {
	properties:           ContactDetailModelProperties;
	required:             string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface ContactDetailModelProperties {
	area:     TartuGecko;
	email:    TartuGecko;
	phone:    TartuGecko;
	fullname: TartuGecko;
}

export interface ContactDto {
	properties:           ContactDtoProperties;
	required:             string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface ContactDtoProperties {
	partner_id: LivingstoneSouthernWhiteFacedOwl;
	detail:     HammerfestPonies;
	created_by: LivingstoneSouthernWhiteFacedOwl;
}

export interface Customer {
	properties:           CustomerProperties;
	required?:            string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface CustomerProperties {
	id:               LivingstoneSouthernWhiteFacedOwl;
	status:           LivingstoneSouthernWhiteFacedOwl;
	created_by:       LivingstoneSouthernWhiteFacedOwl;
	updated_by:       LivingstoneSouthernWhiteFacedOwl;
	deleted_by:       LivingstoneSouthernWhiteFacedOwl;
	created_at:       LivingstoneSouthernWhiteFacedOwl;
	updated_at:       LivingstoneSouthernWhiteFacedOwl;
	deleted_at:       LivingstoneSouthernWhiteFacedOwl;
	deleted_usr:      LivingstoneSouthernWhiteFacedOwl;
	dni:              TartuGecko;
	email:            TartuGecko;
	first_names:      TartuGecko;
	last_names:       TartuGecko;
	country:          TartuGecko;
	county:           TartuGecko;
	city:             TartuGecko;
	street:           TartuGecko;
	phone:            TartuGecko;
	phone_secondary:  TartuGecko;
	additional_info:  TartuGecko;
	mrkl_customer_id: TartuGecko;
	state:            TartuGecko;
}

export interface CustomerDto {
	properties:           CustomerDtoProperties;
	required:             string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface CustomerDtoProperties {
	dni:              TartuGecko;
	email:            TartuGecko;
	first_names:      TartuGecko;
	last_names:       TartuGecko;
	country:          TartuGecko;
	county:           TartuGecko;
	city:             TartuGecko;
	street:           TartuGecko;
	phone:            TartuGecko;
	phone_secondary:  TartuGecko;
	additional_info:  TartuGecko;
	mrkl_customer_id: TartuGecko;
	state:            TartuGecko;
	created_by:       LivingstoneSouthernWhiteFacedOwl;
}

export interface Error {
	properties:           ErrorProperties;
	required:             string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface ErrorProperties {
	code:    TartuGecko;
	name:    TartuGecko;
	context: TartuGecko;
	message: TartuGecko;
}

export interface ErrorException {
	properties:           ErrorExceptionProperties;
	required:             string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface ErrorExceptionProperties {
	error: HammerfestPonies;
}

export interface FullInformationCity {
	properties:           FullInformationCityProperties;
	required:             string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface FullInformationCityProperties {
	city:    HammerfestPonies;
	county:  HammerfestPonies;
	state:   HammerfestPonies;
	country: HammerfestPonies;
}

export interface FullPartner {
	properties:           FullPartnerProperties;
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface FullPartnerProperties {
	status:              LivingstoneSouthernWhiteFacedOwl;
	created_by:          LivingstoneSouthernWhiteFacedOwl;
	updated_by:          LivingstoneSouthernWhiteFacedOwl;
	deleted_by:          LivingstoneSouthernWhiteFacedOwl;
	created_at:          LivingstoneSouthernWhiteFacedOwl;
	updated_at:          LivingstoneSouthernWhiteFacedOwl;
	deleted_at:          LivingstoneSouthernWhiteFacedOwl;
	deleted_usr:         LivingstoneSouthernWhiteFacedOwl;
	id:                  LivingstoneSouthernWhiteFacedOwl;
	mrkl_shop_id:        MrklShopID;
	tier_id:             MrklShopID;
	parent_partner:      MrklShopID;
	ruc:                 TartuGecko;
	business_name:       TartuGecko;
	trade_name:          TartuGecko;
	shop_name:           TartuGecko;
	phone:               TartuGecko;
	email:               TartuGecko;
	city_id:             TartuGecko;
	fiscal_address:      TartuGecko;
	address_ref:         TartuGecko;
	commission:          LivingstoneSouthernWhiteFacedOwl;
	type:                TartuGecko;
	web_site:            TartuGecko;
	logo:                TartuGecko;
	description:         TartuGecko;
	enterprise_iva:      TartuGecko;
	product_category_id: LivingstoneSouthernWhiteFacedOwl;
	categories:          LogisticZones;
	shop_type_id:        LivingstoneSouthernWhiteFacedOwl;
	shipping_24h:        TartuGecko;
	issues_invoice:      TartuGecko;
	brands:              TartuGecko;
	register_mode:       TartuGecko;
	account_manager:     TartuGecko;
	approbation_date:    LivingstoneSouthernWhiteFacedOwl;
	product_average:     LivingstoneSouthernWhiteFacedOwl;
	other_marketplaces:  LogisticZones;
	mrkl_shop_status:    TartuGecko;
	mrkl_shop_error:     TartuGecko;
	status_addons:       LivingstoneSouthernWhiteFacedOwl;
	datePdf:             TartuGecko;
	fullDataCity:        HammerfestPonies;
	bank:                HammerfestPonies;
	bankAccount:         HammerfestPonies;
	currency:            HammerfestPonies;
	providerPaymentData: HammerfestPonies;
	accountingContact:   HammerfestPonies;
	store:               HammerfestPonies;
	shippingMethod:      HammerfestPonies;
	dispatch:            HammerfestPonies;
	logisticZones:       LogisticZones;
	brandsFull:          BrandsFull;
	isDirectDispatch:    TartuGecko;
	contactManagement:   LogisticZones;
	contactLogistic:     LogisticZones;
	contactPostsale:     LogisticZones;
	contactsAdditional:  LogisticZones;
	partners:            LogisticZones;
	logistics:           LogisticZones;
	banks:               LogisticZones;
	users:               LogisticZones;
	stores:              LogisticZones;
	contacts:            LogisticZones;
}

export interface BrandsFull {
	items: TartuGecko;
	type:  FluffyType;
}

export interface MrklShopID {
	type:     PurpleType;
	format:   Format;
	nullable: boolean;
}

export interface FullWebform {
	properties:           FullWebformProperties;
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface FullWebformProperties {
	status:              LivingstoneSouthernWhiteFacedOwl;
	created_by:          LivingstoneSouthernWhiteFacedOwl;
	updated_by:          LivingstoneSouthernWhiteFacedOwl;
	deleted_by:          LivingstoneSouthernWhiteFacedOwl;
	created_at:          LivingstoneSouthernWhiteFacedOwl;
	updated_at:          LivingstoneSouthernWhiteFacedOwl;
	deleted_at:          LivingstoneSouthernWhiteFacedOwl;
	deleted_usr:         LivingstoneSouthernWhiteFacedOwl;
	id:                  LivingstoneSouthernWhiteFacedOwl;
	first_names:         TartuGecko;
	last_names:          TartuGecko;
	dni:                 TartuGecko;
	email:               TartuGecko;
	phone:               TartuGecko;
	business_name:       TartuGecko;
	shop_name:           TartuGecko;
	ruc:                 TartuGecko;
	city_id:             TartuGecko;
	fiscal_address:      TartuGecko;
	address_ref:         TartuGecko;
	shop_type_id:        LivingstoneSouthernWhiteFacedOwl;
	product_category_id: LivingstoneSouthernWhiteFacedOwl;
	product_average:     LivingstoneSouthernWhiteFacedOwl;
	issues_invoice:      TartuGecko;
	shipping_24h:        TartuGecko;
	other_marketplaces:  OtherMarketplaces;
	comment:             TartuGecko;
	partners?:           Examples;
	users?:              Examples;
}

export interface OtherMarketplaces {
	additionalProperties: boolean;
	type:                 TentacledType;
}

export interface LogisticZonePDF {
	properties:           LogisticZonePDFProperties;
	required:             string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface LogisticZonePDFProperties {
	partner_logistic_id: LivingstoneSouthernWhiteFacedOwl;
	shipping_zone_id:    LivingstoneSouthernWhiteFacedOwl;
	freight_cost:        LivingstoneSouthernWhiteFacedOwl;
	order:               LivingstoneSouthernWhiteFacedOwl;
	status:              LivingstoneSouthernWhiteFacedOwl;
	shippingZone?:       HammerfestPonies;
	created_by?:         LivingstoneSouthernWhiteFacedOwl;
}

export interface LoyaltyDto {
	properties:           LoyaltyDtoProperties;
	required:             string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface LoyaltyDtoProperties {
	mrkl_shop_id: LivingstoneSouthernWhiteFacedOwl;
	shop_name:    TartuGecko;
	username:     TartuGecko;
	created_by:   LivingstoneSouthernWhiteFacedOwl;
}

export interface LoyaltyHistory {
	properties:           { [key: string]: LivingstoneSouthernWhiteFacedOwl };
	required?:            string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface LoyaltyHistoryDto {
	properties:           { [key: string]: LivingstoneSouthernWhiteFacedOwl };
	required:             string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface EModel {
	properties:           MarketplaceModelProperties;
	required:             string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface MarketplaceModelProperties {
	name:        TartuGecko;
	description: TartuGecko;
}

export interface Notification {
	properties:           NotificationProperties;
	required?:            string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface NotificationProperties {
	id:          LivingstoneSouthernWhiteFacedOwl;
	status:      LivingstoneSouthernWhiteFacedOwl;
	created_by:  LivingstoneSouthernWhiteFacedOwl;
	updated_by:  LivingstoneSouthernWhiteFacedOwl;
	deleted_by:  LivingstoneSouthernWhiteFacedOwl;
	created_at:  LivingstoneSouthernWhiteFacedOwl;
	updated_at:  LivingstoneSouthernWhiteFacedOwl;
	deleted_at:  LivingstoneSouthernWhiteFacedOwl;
	deleted_usr: LivingstoneSouthernWhiteFacedOwl;
	receiver_id: LivingstoneSouthernWhiteFacedOwl;
	order_id:    LivingstoneSouthernWhiteFacedOwl;
	title:       TartuGecko;
	message:     TartuGecko;
}

export interface NotificationDto {
	properties:           NotificationDtoProperties;
	required:             string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface NotificationDtoProperties {
	receiver_id: LivingstoneSouthernWhiteFacedOwl;
	order_id:    LivingstoneSouthernWhiteFacedOwl;
	title:       TartuGecko;
	message:     TartuGecko;
	created_by:  LivingstoneSouthernWhiteFacedOwl;
}

export interface OrderModel {
	properties:           OrderModelProperties;
	required:             string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface OrderModelProperties {
	id:                    LivingstoneSouthernWhiteFacedOwl;
	mrkl_order_id:         TartuGecko;
	mrkl_order_state:      TartuGecko;
	commercial_id:         TartuGecko;
	created_date:          LivingstoneSouthernWhiteFacedOwl;
	customer_debited_date: LivingstoneSouthernWhiteFacedOwl;
	shipping_deadline:     LivingstoneSouthernWhiteFacedOwl;
	shipping_zone_label:   TartuGecko;
	order_id:              TartuGecko;
	order_status_id:       LivingstoneSouthernWhiteFacedOwl;
	total_price:           LivingstoneSouthernWhiteFacedOwl;
	dispatch_date:         LivingstoneSouthernWhiteFacedOwl;
	new_dispatch_date:     LivingstoneSouthernWhiteFacedOwl;
	delivery_date:         LivingstoneSouthernWhiteFacedOwl;
	number_of_boxes:       LivingstoneSouthernWhiteFacedOwl;
	route_google_maps:     RouteGoogleMaps;
	seller_id:             LivingstoneSouthernWhiteFacedOwl;
	customer_id:           LivingstoneSouthernWhiteFacedOwl;
	carrier_id:            LivingstoneSouthernWhiteFacedOwl;
	vehicle_id:            LivingstoneSouthernWhiteFacedOwl;
	created_at:            LivingstoneSouthernWhiteFacedOwl;
	updated_at:            LivingstoneSouthernWhiteFacedOwl;
}

export interface RouteGoogleMaps {
	properties:           Examples;
	additionalProperties: Examples;
	type:                 TentacledType;
}

export interface OrderStatusHistory {
	properties:           OrderStatusHistoryProperties;
	required?:            string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface OrderStatusHistoryProperties {
	id:                  LivingstoneSouthernWhiteFacedOwl;
	status:              LivingstoneSouthernWhiteFacedOwl;
	created_by:          LivingstoneSouthernWhiteFacedOwl;
	updated_by:          LivingstoneSouthernWhiteFacedOwl;
	deleted_by:          LivingstoneSouthernWhiteFacedOwl;
	created_at:          LivingstoneSouthernWhiteFacedOwl;
	updated_at:          LivingstoneSouthernWhiteFacedOwl;
	deleted_at:          LivingstoneSouthernWhiteFacedOwl;
	deleted_usr:         LivingstoneSouthernWhiteFacedOwl;
	order_id:            LivingstoneSouthernWhiteFacedOwl;
	user_id:             LivingstoneSouthernWhiteFacedOwl;
	message:             LivingstoneSouthernWhiteFacedOwl;
	data:                TartuGecko;
	evidence_image_urls: BrandsFull;
	client_sign:         TartuGecko;
	order_status_id:     LivingstoneSouthernWhiteFacedOwl;
}

export interface OrderStatusHistoryDto {
	properties:           OrderStatusHistoryDtoProperties;
	required:             string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface OrderStatusHistoryDtoProperties {
	order_id:            LivingstoneSouthernWhiteFacedOwl;
	user_id:             LivingstoneSouthernWhiteFacedOwl;
	message:             LivingstoneSouthernWhiteFacedOwl;
	data:                TartuGecko;
	evidence_image_urls: BrandsFull;
	client_sign:         TartuGecko;
	order_status_id:     LivingstoneSouthernWhiteFacedOwl;
	created_by:          LivingstoneSouthernWhiteFacedOwl;
}

export interface PartialUser {
	properties:  PartialUserProperties;
	type:        TentacledType;
	description: string;
}

export interface PartialUserProperties {
	id:               LivingstoneSouthernWhiteFacedOwl;
	status:           LivingstoneSouthernWhiteFacedOwl;
	created_by:       LivingstoneSouthernWhiteFacedOwl;
	updated_by:       LivingstoneSouthernWhiteFacedOwl;
	deleted_by:       LivingstoneSouthernWhiteFacedOwl;
	created_at:       LivingstoneSouthernWhiteFacedOwl;
	updated_at:       LivingstoneSouthernWhiteFacedOwl;
	deleted_at:       LivingstoneSouthernWhiteFacedOwl;
	deleted_usr:      LivingstoneSouthernWhiteFacedOwl;
	username:         TartuGecko;
	password:         TartuGecko;
	first_names:      TartuGecko;
	last_names:       TartuGecko;
	full_name:        TartuGecko;
	device_token:     TartuGecko;
	role_id:          LivingstoneSouthernWhiteFacedOwl;
	phone:            TartuGecko;
	email:            TartuGecko;
	mailing_date:     TartuGecko;
	avatar:           TartuGecko;
	dni:              TartuGecko;
	seller_id:        LivingstoneSouthernWhiteFacedOwl;
	password_changed: TartuGecko;
	welcome:          TartuGecko;
	tutorial:         TartuGecko;
	shops_number:     LivingstoneSouthernWhiteFacedOwl;
	training_date:    LivingstoneSouthernWhiteFacedOwl;
	status_addons:    LivingstoneSouthernWhiteFacedOwl;
}

export interface PartnerClass {
	properties:           PartnerProperties;
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface PartnerProperties {
	status?:             LivingstoneSouthernWhiteFacedOwl;
	created_by:          LivingstoneSouthernWhiteFacedOwl;
	updated_by?:         LivingstoneSouthernWhiteFacedOwl;
	deleted_by?:         LivingstoneSouthernWhiteFacedOwl;
	created_at?:         LivingstoneSouthernWhiteFacedOwl;
	updated_at?:         LivingstoneSouthernWhiteFacedOwl;
	deleted_at?:         LivingstoneSouthernWhiteFacedOwl;
	deleted_usr?:        LivingstoneSouthernWhiteFacedOwl;
	id?:                 LivingstoneSouthernWhiteFacedOwl;
	mrkl_shop_id:        MrklShopID;
	tier_id:             MrklShopID;
	parent_partner:      MrklShopID;
	ruc:                 TartuGecko;
	business_name:       TartuGecko;
	trade_name:          TartuGecko;
	shop_name:           TartuGecko;
	phone:               TartuGecko;
	email:               TartuGecko;
	city_id:             TartuGecko;
	fiscal_address:      TartuGecko;
	address_ref:         TartuGecko;
	commission:          LivingstoneSouthernWhiteFacedOwl;
	type:                TartuGecko;
	web_site:            TartuGecko;
	logo:                TartuGecko;
	description:         TartuGecko;
	enterprise_iva:      TartuGecko;
	product_category_id: LivingstoneSouthernWhiteFacedOwl;
	categories:          LogisticZones;
	shop_type_id:        LivingstoneSouthernWhiteFacedOwl;
	shipping_24h:        TartuGecko;
	issues_invoice:      TartuGecko;
	brands:              TartuGecko;
	register_mode:       TartuGecko;
	account_manager:     TartuGecko;
	approbation_date:    LivingstoneSouthernWhiteFacedOwl;
	product_average:     LivingstoneSouthernWhiteFacedOwl;
	other_marketplaces:  LogisticZones;
	mrkl_shop_status:    TartuGecko;
	mrkl_shop_error:     TartuGecko;
	status_addons:       LivingstoneSouthernWhiteFacedOwl;
}

export interface PartnerBank {
	properties:           PartnerBankProperties;
	required?:            string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface PartnerBankProperties {
	id:              LivingstoneSouthernWhiteFacedOwl;
	status:          LivingstoneSouthernWhiteFacedOwl;
	created_by:      LivingstoneSouthernWhiteFacedOwl;
	updated_by:      LivingstoneSouthernWhiteFacedOwl;
	deleted_by:      LivingstoneSouthernWhiteFacedOwl;
	created_at:      LivingstoneSouthernWhiteFacedOwl;
	updated_at:      LivingstoneSouthernWhiteFacedOwl;
	deleted_at:      LivingstoneSouthernWhiteFacedOwl;
	deleted_usr:     LivingstoneSouthernWhiteFacedOwl;
	partner_id:      LivingstoneSouthernWhiteFacedOwl;
	bank_id:         LivingstoneSouthernWhiteFacedOwl;
	bank_account_id: LivingstoneSouthernWhiteFacedOwl;
	currency_id:     LivingstoneSouthernWhiteFacedOwl;
	ccc:             TartuGecko;
	cci:             TartuGecko;
	billing_email:   TartuGecko;
}

export interface PartnerBankDto {
	properties:           PartnerBankDtoProperties;
	required:             string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface PartnerBankDtoProperties {
	partner_id:      LivingstoneSouthernWhiteFacedOwl;
	bank_id:         LivingstoneSouthernWhiteFacedOwl;
	bank_account_id: LivingstoneSouthernWhiteFacedOwl;
	currency_id:     LivingstoneSouthernWhiteFacedOwl;
	ccc:             TartuGecko;
	cci:             TartuGecko;
	billing_email:   TartuGecko;
	created_by:      LivingstoneSouthernWhiteFacedOwl;
}

export interface PartnerHistory {
	properties:           PartnerHistoryProperties;
	required?:            string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface PartnerHistoryProperties {
	id:            LivingstoneSouthernWhiteFacedOwl;
	status:        LivingstoneSouthernWhiteFacedOwl;
	created_by:    LivingstoneSouthernWhiteFacedOwl;
	updated_by:    LivingstoneSouthernWhiteFacedOwl;
	deleted_by:    LivingstoneSouthernWhiteFacedOwl;
	created_at:    LivingstoneSouthernWhiteFacedOwl;
	updated_at:    LivingstoneSouthernWhiteFacedOwl;
	deleted_at:    LivingstoneSouthernWhiteFacedOwl;
	deleted_usr:   LivingstoneSouthernWhiteFacedOwl;
	partner_id:    LivingstoneSouthernWhiteFacedOwl;
	status_addons: LivingstoneSouthernWhiteFacedOwl;
	mailing_date:  LivingstoneSouthernWhiteFacedOwl;
	mailing_error: Examples;
	comment:       TartuGecko;
}

export interface PartnerHistoryDto {
	properties:           PartnerHistoryDtoProperties;
	required:             string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface PartnerHistoryDtoProperties {
	status:        LivingstoneSouthernWhiteFacedOwl;
	partner_id:    LivingstoneSouthernWhiteFacedOwl;
	status_addons: LivingstoneSouthernWhiteFacedOwl;
	mailing_date:  LivingstoneSouthernWhiteFacedOwl;
	mailing_error: Examples;
	comment:       TartuGecko;
	created_by:    LivingstoneSouthernWhiteFacedOwl;
}

export interface PartnerLogisticDto {
	properties:           PartnerLogisticDtoProperties;
	required:             string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface PartnerLogisticDtoProperties {
	partner_id:         LivingstoneSouthernWhiteFacedOwl;
	shipping_method_id: LivingstoneSouthernWhiteFacedOwl;
	logistic_zones:     LogisticZones;
	order:              LivingstoneSouthernWhiteFacedOwl;
	created_by:         LivingstoneSouthernWhiteFacedOwl;
}

export interface PartnerProductCategoryDto {
	properties:           PartnerProductCategoryDtoProperties;
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface PartnerProductCategoryDtoProperties {
	partner_id:          LivingstoneSouthernWhiteFacedOwl;
	product_category_id: LivingstoneSouthernWhiteFacedOwl;
	order:               LivingstoneSouthernWhiteFacedOwl;
	created_by:          LivingstoneSouthernWhiteFacedOwl;
}

export interface PartnerUserDto {
	properties:           PartnerUserDtoProperties;
	required:             string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface PartnerUserDtoProperties {
	user_id:          LivingstoneSouthernWhiteFacedOwl;
	partner_id:       LivingstoneSouthernWhiteFacedOwl;
	partner_child_id: LivingstoneSouthernWhiteFacedOwl;
	order:            LivingstoneSouthernWhiteFacedOwl;
	created_by:       LivingstoneSouthernWhiteFacedOwl;
}

export interface Product {
	properties:           ProductProperties;
	required?:            string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface ProductProperties {
	id:                    LivingstoneSouthernWhiteFacedOwl;
	status:                LivingstoneSouthernWhiteFacedOwl;
	created_by:            LivingstoneSouthernWhiteFacedOwl;
	updated_by:            LivingstoneSouthernWhiteFacedOwl;
	deleted_by:            LivingstoneSouthernWhiteFacedOwl;
	created_at:            LivingstoneSouthernWhiteFacedOwl;
	updated_at:            LivingstoneSouthernWhiteFacedOwl;
	deleted_at:            LivingstoneSouthernWhiteFacedOwl;
	deleted_usr:           LivingstoneSouthernWhiteFacedOwl;
	order_id:              LivingstoneSouthernWhiteFacedOwl;
	mrkl_order_line_state: TartuGecko;
	category_code:         TartuGecko;
	category_label:        TartuGecko;
	offer_sku:             TartuGecko;
	product_sku:           TartuGecko;
	product_title:         TartuGecko;
	quantity:              LivingstoneSouthernWhiteFacedOwl;
	received_date:         LivingstoneSouthernWhiteFacedOwl;
	price:                 LivingstoneSouthernWhiteFacedOwl;
	name:                  TartuGecko;
	image:                 TartuGecko;
}

export interface ProductDto {
	properties:           ProductDtoProperties;
	required:             string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface ProductDtoProperties {
	order_id:              LivingstoneSouthernWhiteFacedOwl;
	mrkl_order_line_state: TartuGecko;
	category_code:         TartuGecko;
	category_label:        TartuGecko;
	offer_sku:             TartuGecko;
	product_sku:           TartuGecko;
	product_title:         TartuGecko;
	quantity:              LivingstoneSouthernWhiteFacedOwl;
	received_date:         LivingstoneSouthernWhiteFacedOwl;
	price:                 LivingstoneSouthernWhiteFacedOwl;
	name:                  TartuGecko;
	image:                 TartuGecko;
	created_by:            LivingstoneSouthernWhiteFacedOwl;
}

export interface RequestLogin {
	properties:           RequestLoginProperties;
	required:             string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface RequestLoginProperties {
	username:     TartuGecko;
	password:     TartuGecko;
	device_token: TartuGecko;
}

export interface ArakGroundhog {
	properties:           TentacledProperties;
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface TentacledProperties {
	error:   HammerfestPonies;
	data:    LogisticZones;
	status:  TartuGecko;
	message: TartuGecko;
}

export interface ResponseAPIBankAccountArrayOrErrorException {
	properties:           ResponseAPIBankAccountArrayOrErrorExceptionProperties;
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface ResponseAPIBankAccountArrayOrErrorExceptionProperties {
	error:   HammerfestPonies;
	data:    PurpleData;
	status:  TartuGecko;
	message: TartuGecko;
}

export interface PurpleData {
	anyOf: DataAnyOf[];
}

export interface DataAnyOf {
	items?: HammerfestPonies;
	type?:  FluffyType;
	$ref?:  string;
}

export interface ResponseAPIBankAccountOrErrorException {
	properties:           ResponseAPIBankAccountOrErrorExceptionProperties;
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface ResponseAPIBankAccountOrErrorExceptionProperties {
	error:   HammerfestPonies;
	data:    SchemaClass;
	status:  TartuGecko;
	message: TartuGecko;
}

export interface SchemaClass {
	anyOf: HammerfestPonies[];
}

export interface BeijingPigeon {
	properties:           StickyProperties;
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface StickyProperties {
	error:   HammerfestPonies;
	data:    HammerfestPonies;
	status:  TartuGecko;
	message: TartuGecko;
}

export interface ResponseAPIBoolean {
	properties:           ResponseAPIBooleanProperties;
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface ResponseAPIBooleanProperties {
	error:   HammerfestPonies;
	data:    TartuGecko;
	status:  TartuGecko;
	message: TartuGecko;
}

export interface ResponseAPINull {
	properties:           ResponseAPINullProperties;
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface ResponseAPINullProperties {
	error:   HammerfestPonies;
	data:    FluffyData;
	status:  TartuGecko;
	message: TartuGecko;
}

export interface FluffyData {
	type:     PurpleType;
	enum:     null[];
	nullable: boolean;
}

export interface ResponseLogin {
	properties:           ResponseLoginProperties;
	required:             string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface ResponseLoginProperties {
	token: TartuGecko;
	user:  HammerfestPonies;
}

export interface ReviewRequestShop {
	properties:           ReviewRequestShopProperties;
	required:             string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface ReviewRequestShopProperties {
	transactionId: TartuGecko;
	subject:       TartuGecko;
	email:         TartuGecko;
	id_request:    TartuGecko;
	shop_name:     TartuGecko;
	order_number:  TartuGecko;
}

export interface ShippingMethod {
	properties:           ShippingMethodProperties;
	required?:            string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface ShippingMethodProperties {
	id:               LivingstoneSouthernWhiteFacedOwl;
	status:           LivingstoneSouthernWhiteFacedOwl;
	created_by:       LivingstoneSouthernWhiteFacedOwl;
	updated_by:       LivingstoneSouthernWhiteFacedOwl;
	deleted_by:       LivingstoneSouthernWhiteFacedOwl;
	created_at:       LivingstoneSouthernWhiteFacedOwl;
	updated_at:       LivingstoneSouthernWhiteFacedOwl;
	deleted_at:       LivingstoneSouthernWhiteFacedOwl;
	deleted_usr:      LivingstoneSouthernWhiteFacedOwl;
	dispatch_id:      LivingstoneSouthernWhiteFacedOwl;
	preparation_time: LivingstoneSouthernWhiteFacedOwl;
	pickup_time:      LivingstoneSouthernWhiteFacedOwl;
	shipping_time:    LivingstoneSouthernWhiteFacedOwl;
	name:             TartuGecko;
	description:      TartuGecko;
}

export interface ShippingMethodDto {
	properties:           ShippingMethodDtoProperties;
	required:             string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface ShippingMethodDtoProperties {
	dispatch_id:      LivingstoneSouthernWhiteFacedOwl;
	preparation_time: LivingstoneSouthernWhiteFacedOwl;
	pickup_time:      LivingstoneSouthernWhiteFacedOwl;
	shipping_time:    LivingstoneSouthernWhiteFacedOwl;
	name:             TartuGecko;
	description:      TartuGecko;
	created_by:       LivingstoneSouthernWhiteFacedOwl;
}

export interface StateDto {
	properties:           StateDtoProperties;
	required:             string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface StateDtoProperties {
	country_id: TartuGecko;
	name:       TartuGecko;
	created_by: LivingstoneSouthernWhiteFacedOwl;
	id:         LivingstoneSouthernWhiteFacedOwl;
}

export interface StatusDtoClass {
	properties:           StatusDtoProperties;
	required:             string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface StatusDtoProperties {
	table:       TartuGecko;
	name:        TartuGecko;
	description: TartuGecko;
	comment:     TartuGecko;
	main?:       TartuGecko;
	created_by:  LivingstoneSouthernWhiteFacedOwl;
}

export interface Store {
	properties:           StoreProperties;
	required?:            string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface StoreProperties {
	id:               LivingstoneSouthernWhiteFacedOwl;
	status:           LivingstoneSouthernWhiteFacedOwl;
	created_by:       LivingstoneSouthernWhiteFacedOwl;
	updated_by:       LivingstoneSouthernWhiteFacedOwl;
	deleted_by:       LivingstoneSouthernWhiteFacedOwl;
	created_at:       LivingstoneSouthernWhiteFacedOwl;
	updated_at:       LivingstoneSouthernWhiteFacedOwl;
	deleted_at:       LivingstoneSouthernWhiteFacedOwl;
	deleted_usr:      LivingstoneSouthernWhiteFacedOwl;
	partner_id:       LivingstoneSouthernWhiteFacedOwl;
	partner_child_id: LivingstoneSouthernWhiteFacedOwl;
	city_id:          TartuGecko;
	address:          TartuGecko;
	address_ref:      TartuGecko;
	business_hour:    TartuGecko;
	snack_time:       LivingstoneSouthernWhiteFacedOwl;
	comment:          TartuGecko;
}

export interface StoreDtoClass {
	properties:           StoreDtoProperties;
	required:             string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface StoreDtoProperties {
	partner_id:              LivingstoneSouthernWhiteFacedOwl;
	partner_child_id:        LivingstoneSouthernWhiteFacedOwl;
	city_id:                 TartuGecko;
	address:                 TartuGecko;
	address_ref:             TartuGecko;
	business_hour:           TartuGecko;
	snack_time:              LivingstoneSouthernWhiteFacedOwl;
	comment:                 TartuGecko;
	created_by?:             LivingstoneSouthernWhiteFacedOwl;
	snack_time_description?: TartuGecko;
	storeCityData?:          HammerfestPonies;
}

export interface SuccessfulRegistrationShop {
	properties:           SuccessfulRegistrationShopProperties;
	required:             string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface SuccessfulRegistrationShopProperties {
	transactionId: TartuGecko;
	subject:       TartuGecko;
	email:         TartuGecko;
	webform_id:    TartuGecko;
	shop_name:     TartuGecko;
	username:      TartuGecko;
	password:      TartuGecko;
	user_id?:      TartuGecko;
}

export interface User {
	properties:           PartialUserProperties;
	required?:            string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface UserDto {
	properties:           UserDtoProperties;
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface UserDtoProperties {
	username:         TartuGecko;
	password:         TartuGecko;
	first_names:      TartuGecko;
	last_names:       TartuGecko;
	full_name:        TartuGecko;
	device_token:     TartuGecko;
	role_id:          LivingstoneSouthernWhiteFacedOwl;
	phone:            TartuGecko;
	email:            TartuGecko;
	mailing_date:     TartuGecko;
	avatar:           TartuGecko;
	dni:              TartuGecko;
	seller_id:        LivingstoneSouthernWhiteFacedOwl;
	password_changed: TartuGecko;
	welcome:          TartuGecko;
	tutorial:         TartuGecko;
	shops_number:     LivingstoneSouthernWhiteFacedOwl;
	training_date:    LivingstoneSouthernWhiteFacedOwl;
	status_addons:    LivingstoneSouthernWhiteFacedOwl;
	created_by:       LivingstoneSouthernWhiteFacedOwl;
}

export interface UserTrainingDto {
	properties:           UserTrainingDtoProperties;
	required:             string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface UserTrainingDtoProperties {
	user_id:       LivingstoneSouthernWhiteFacedOwl;
	training_id:   LivingstoneSouthernWhiteFacedOwl;
	training_date: LivingstoneSouthernWhiteFacedOwl;
	created_by:    LivingstoneSouthernWhiteFacedOwl;
}

export interface Vehicle {
	properties:           VehicleProperties;
	required?:            string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface VehicleProperties {
	id:              LivingstoneSouthernWhiteFacedOwl;
	status:          LivingstoneSouthernWhiteFacedOwl;
	created_by:      LivingstoneSouthernWhiteFacedOwl;
	updated_by:      LivingstoneSouthernWhiteFacedOwl;
	deleted_by:      LivingstoneSouthernWhiteFacedOwl;
	created_at:      LivingstoneSouthernWhiteFacedOwl;
	updated_at:      LivingstoneSouthernWhiteFacedOwl;
	deleted_at:      LivingstoneSouthernWhiteFacedOwl;
	deleted_usr:     LivingstoneSouthernWhiteFacedOwl;
	carrier_id:      LivingstoneSouthernWhiteFacedOwl;
	vehicle_type_id: LivingstoneSouthernWhiteFacedOwl;
	car_plate:       TartuGecko;
	color:           TartuGecko;
	brand:           TartuGecko;
	description:     TartuGecko;
}

export interface VehicleDto {
	properties:           VehicleDtoProperties;
	required:             string[];
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface VehicleDtoProperties {
	carrier_id:      LivingstoneSouthernWhiteFacedOwl;
	vehicle_type_id: LivingstoneSouthernWhiteFacedOwl;
	car_plate:       TartuGecko;
	color:           TartuGecko;
	brand:           TartuGecko;
	description:     TartuGecko;
	created_by:      LivingstoneSouthernWhiteFacedOwl;
}

export interface WebformDto {
	properties:           WebformDtoProperties;
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface WebformDtoProperties {
	first_names:         TartuGecko;
	last_names:          TartuGecko;
	dni:                 TartuGecko;
	email:               TartuGecko;
	phone:               TartuGecko;
	business_name:       TartuGecko;
	shop_name:           TartuGecko;
	ruc:                 TartuGecko;
	city_id:             TartuGecko;
	fiscal_address:      TartuGecko;
	address_ref:         TartuGecko;
	shop_type_id:        LivingstoneSouthernWhiteFacedOwl;
	product_category_id: LivingstoneSouthernWhiteFacedOwl;
	product_average:     LivingstoneSouthernWhiteFacedOwl;
	issues_invoice:      TartuGecko;
	shipping_24h:        TartuGecko;
	other_marketplaces:  OtherMarketplaces;
	comment:             TartuGecko;
	created_by:          LivingstoneSouthernWhiteFacedOwl;
}

export interface WelcomeMailModel {
	properties:           SuccessfulRegistrationShopProperties;
	type:                 TentacledType;
	additionalProperties: boolean;
}

export interface Info {
	title:   string;
	version: string;
	license: License;
	contact: Examples;
}

export interface License {
	name: string;
}

export interface Paths {
	"/auth/login":                                     AuthLogin;
	"/auth/logout":                                    AuthLogin;
	"/auth/refresh-token":                             AuthLogin;
	"/auth/reset-password":                            AuthLogin;
	"/order/filtered":                                 LoyaltyQuarter;
	"/order/export/excel":                             LoyaltyQuarter;
	"/order/search":                                   LoyaltyQuarter;
	"/order/{id}":                                     LoyaltyQuarter;
	"/order":                                          LoyaltyQuarter;
	"/order/{id}/update_order_status":                 AutomaticSeller;
	"/order/{id}/update_order_status_stable/evidence": AutomaticSeller;
	"/order/assign-orders":                            AutomaticSeller;
	"/order/confirmed-orders-to-assign":               LoyaltyQuarter;
	"/product":                                        TrapaniSnowLeopard;
	"/customer":                                       TrapaniSnowLeopard;
	"/user":                                           TrapaniSnowLeopard;
	"/webform":                                        TrapaniSnowLeopard;
	"/vehicle":                                        TrapaniSnowLeopard;
	"/routing":                                        Routing;
	"/routing/start":                                  RoutingStart;
	"/routing/end":                                    RoutingEnd;
	"/routing/programados":                            RoutingProgramados;
	"/notification":                                   TrapaniSnowLeopard;
	"/country":                                        Country;
	"/state":                                          State;
	"/county":                                         CityClass;
	"/city":                                           CityClass;
	"/schedule":                                       PurplePartner;
	"/dispatch":                                       TrapaniSnowLeopard;
	"/shipping_method":                                PurplePartner;
	"/currency":                                       TrapaniSnowLeopard;
	"/bank":                                           TrapaniSnowLeopard;
	"/bank_account":                                   TrapaniSnowLeopard;
	"/type":                                           PurplePartner;
	"/store":                                          TrapaniSnowLeopard;
	"/partner":                                        PurplePartner;
	"/partner/full_partner":                           PartnerFullPartner;
	"/partner/pdf/createSeller":                       LoyaltyQuarter;
	"/partner/search":                                 PartnerSearch;
	"/partner_user":                                   TrapaniSnowLeopard;
	"/partner_user/detail":                            PartnerUserDetail;
	"/contact":                                        TrapaniSnowLeopard;
	"/training":                                       PurplePartner;
	"/reason":                                         TrapaniSnowLeopard;
	"/mail":                                           AuthLogin;
	"/mail/successfulRegistration":                    AuthLogin;
	"/mail/reviewRequest":                             AuthLogin;
	"/mail/rejectRequest":                             AuthLogin;
	"/extra/migration":                                AutomaticSeller;
	"/info":                                           TrapaniSnowLeopard;
	"/loyalty":                                        TrapaniSnowLeopard;
	"/loyalty/quarter":                                LoyaltyQuarter;
	"/loyalty/quarterByMiraklShopId":                  LoyaltyQuarter;
	"/loyalty/excelUpload":                            AutomaticSeller;
	"/loyalty_history":                                TrapaniSnowLeopard;
	"/tier":                                           TrapaniSnowLeopard;
	"/automatic/seller":                               AutomaticSeller;
	"/business_unit":                                  TrapaniSnowLeopard;
	"/product_category":                               TrapaniSnowLeopard;
	"/marketplace":                                    TrapaniSnowLeopard;
	"/entity_type":                                    TrapaniSnowLeopard;
	"/partner_logistic":                               TrapaniSnowLeopard;
	"/partner_logistic_zone":                          TrapaniSnowLeopard;
	"/partner_product_category":                       TrapaniSnowLeopard;
	"/business_division":                              TrapaniSnowLeopard;
	"/partner_bank":                                   TrapaniSnowLeopard;
	"/loyalty_category":                               TrapaniSnowLeopard;
	"/partner_history":                                TrapaniSnowLeopard;
	"/shipping_zone":                                  PurplePartner;
	"/user_training":                                  PurplePartner;
	"/order_status_history":                           TrapaniSnowLeopard;
	"/status":                                         TrapaniSnowLeopard;
	"/significant_date":                               TrapaniSnowLeopard;
}

export interface AuthLogin {
	post: DeleteClass;
}

export interface DeleteClass {
	operationId:  string;
	responses:    PurpleResponses;
	tags:         string[];
	security:     any[];
	parameters:   Parameter[];
	requestBody?: RequestBody;
}

export interface Parameter {
	in:       In;
	name:     Name;
	required: boolean;
	schema:   LivingstoneSouthernWhiteFacedOwl;
}

export enum In {
	Query = "query",
}

export enum Name {
	ID = "id",
}

export interface RequestBody {
	required: boolean;
	content:  RequestBodyContent;
}

export interface RequestBodyContent {
	"application/json": PurpleApplicationJSON;
}

export interface PurpleApplicationJSON {
	schema: HammerfestPonies;
}

export interface PurpleResponses {
	"200": Purple200;
}

export interface Purple200 {
	description: Description;
	content:     PurpleContent;
}

export interface PurpleContent {
	"application/json": FluffyApplicationJSON;
}

export interface FluffyApplicationJSON {
	schema: SchemaClass;
}

export enum Description {
	Ok = "Ok",
}

export interface AutomaticSeller {
	post: PurplePost;
}

export interface PurplePost {
	operationId: string;
	responses:   FluffyResponses;
	tags:        string[];
	security:    any[];
	parameters:  any[];
}

export interface FluffyResponses {
	"200": Fluffy200;
}

export interface Fluffy200 {
	description: Description;
	content:     FluffyContent;
}

export interface FluffyContent {
	"application/json": TentacledApplicationJSON;
}

export interface TentacledApplicationJSON {
	schema: Examples;
}

export interface TrapaniSnowLeopard {
	get:    PurpleGet;
	post:   PatchClass;
	patch:  PatchClass;
	delete: PatchClass;
}

export interface PatchClass {
	operationId:  OperationID;
	responses:    TentacledResponses;
	tags:         string[];
	security:     any[];
	parameters:   Parameter[];
	requestBody?: RequestBody;
}

export enum OperationID {
	Create = "Create",
	CreateFullPartner = "CreateFullPartner",
	Delete = "Delete",
	Retrieve = "Retrieve",
	RetrieveMany = "RetrieveMany",
	Update = "Update",
	UpdateFullPartner = "UpdateFullPartner",
}

export interface TentacledResponses {
	"200": Tentacled200;
}

export interface Tentacled200 {
	description: Description;
	content:     RequestBodyContent;
}

export interface PurpleGet {
	operationId: OperationID;
	responses:   TentacledResponses;
	tags:        string[];
	security:    any[];
	parameters:  any[];
}

export interface CityClass {
	get:    PatchClass;
	post:   PatchClass;
	patch:  PatchClass;
	delete: PatchClass;
}

export interface Country {
	get:    PatchClass;
	post:   PatchClass;
	patch:  PatchClass;
	delete: DeleteClass;
}

export interface LoyaltyQuarter {
	get: PurplePost;
}

export interface PurplePartner {
	get:    PurpleDelete;
	post:   DeleteClass;
	patch:  DeleteClass;
	delete: PurpleDelete;
}

export interface PurpleDelete {
	operationId: OperationID;
	responses:   PurpleResponses;
	tags:        string[];
	security:    any[];
	parameters:  Parameter[];
}

export interface PartnerFullPartner {
	get:   DeleteClass;
	post:  PatchClass;
	patch: PatchClass;
}

export interface PartnerSearch {
	get: PartnerSearchGet;
}

export interface PartnerSearchGet {
	operationId: string;
	responses:   StickyResponses;
	tags:        string[];
	security:    any[];
	parameters:  any[];
}

export interface StickyResponses {
	"200": Sticky200;
}

export interface Sticky200 {
	description: Description;
	content:     TentacledContent;
}

export interface TentacledContent {
	"application/json": StickyApplicationJSON;
}

export interface StickyApplicationJSON {
	schema: PurpleSchema;
}

export interface PurpleSchema {
	anyOf: PurpleAnyOf[];
}

export interface PurpleAnyOf {
	$ref?:       string;
	properties?: IndigoProperties;
	required?:   string[];
	type?:       TentacledType;
}

export interface IndigoProperties {
	data: Results;
}

export interface Results {
	items: Examples;
	type:  FluffyType;
}

export interface PartnerUserDetail {
	get: PartnerUserDetailGet;
}

export interface PartnerUserDetailGet {
	operationId: string;
	responses:   IndigoResponses;
	tags:        string[];
	security:    any[];
	parameters:  any[];
}

export interface IndigoResponses {
	"200": Indigo200;
}

export interface Indigo200 {
	description: Description;
	content:     StickyContent;
}

export interface StickyContent {
	"application/json": IndigoApplicationJSON;
}

export interface IndigoApplicationJSON {
	schema: FluffySchema;
}

export interface FluffySchema {
	anyOf: FluffyAnyOf[];
}

export interface FluffyAnyOf {
	$ref?:       string;
	properties?: IndecentProperties;
	required?:   string[];
	type?:       TentacledType;
}

export interface IndecentProperties {
	data: LogisticZones;
}

export interface Routing {
	get: RoutingGet;
}

export interface RoutingGet {
	operationId: string;
	responses:   IndecentResponses;
	tags:        string[];
	security:    any[];
	parameters:  any[];
}

export interface IndecentResponses {
	"200": Indecent200;
}

export interface Indecent200 {
	description: Description;
	content:     IndigoContent;
}

export interface IndigoContent {
	"application/json": IndecentApplicationJSON;
}

export interface IndecentApplicationJSON {
	schema: TentacledSchema;
}

export interface TentacledSchema {
	properties: HilariousProperties;
	required:   string[];
	type:       TentacledType;
}

export interface HilariousProperties {
	results: Results;
	status:  TartuGecko;
}

export interface RoutingEnd {
	post: RoutingEndPost;
}

export interface RoutingEndPost {
	operationId: string;
	responses:   HilariousResponses;
	tags:        string[];
	security:    any[];
	parameters:  any[];
}

export interface HilariousResponses {
	"200": Hilarious200;
}

export interface Hilarious200 {
	description: Description;
	content:     IndecentContent;
}

export interface IndecentContent {
	"application/json": HilariousApplicationJSON;
}

export interface HilariousApplicationJSON {
	schema: StickySchema;
}

export interface StickySchema {
	properties: AmbitiousProperties;
	required:   string[];
	type:       TentacledType;
}

export interface AmbitiousProperties {
	message: TartuGecko;
	status:  TartuGecko;
}

export interface RoutingProgramados {
	get: RoutingProgramadosGet;
}

export interface RoutingProgramadosGet {
	operationId: string;
	responses:   AmbitiousResponses;
	tags:        string[];
	security:    any[];
	parameters:  any[];
}

export interface AmbitiousResponses {
	"200": Ambitious200;
}

export interface Ambitious200 {
	description: Description;
	content:     HilariousContent;
}

export interface HilariousContent {
	"application/json": AmbitiousApplicationJSON;
}

export interface AmbitiousApplicationJSON {
	schema: IndigoSchema;
}

export interface IndigoSchema {
	properties: CunningProperties;
	required:   string[];
	type:       TentacledType;
}

export interface CunningProperties {
	results:  Results;
	route_id: TartuGecko;
	count:    LivingstoneSouthernWhiteFacedOwl;
	status:   TartuGecko;
}

export interface RoutingStart {
	post: RoutingStartPost;
}

export interface RoutingStartPost {
	operationId: string;
	responses:   CunningResponses;
	tags:        string[];
	security:    any[];
	parameters:  any[];
}

export interface CunningResponses {
	"200": Cunning200;
}

export interface Cunning200 {
	description: Description;
	content:     AmbitiousContent;
}

export interface AmbitiousContent {
	"application/json": CunningApplicationJSON;
}

export interface CunningApplicationJSON {
	schema: LogisticZones;
}

export interface State {
	get:    DeleteClass;
	post:   DeleteClass;
	patch:  DeleteClass;
	delete: DeleteClass;
}

export interface Server {
	url: string;
}
